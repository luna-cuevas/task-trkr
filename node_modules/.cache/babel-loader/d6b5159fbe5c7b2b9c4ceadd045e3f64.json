{"ast":null,"code":"'use strict';\n\nfunction fromElement(element_id, canvas_id, options) {\n  const globalAccessKey = [options.globalAccessKey || '$wave'];\n\n  const initGlobalObject = elementId => {\n    window[globalAccessKey] = window[globalAccessKey] || {};\n    window[globalAccessKey][elementId] = window[globalAccessKey][elementId] || {};\n  };\n\n  const getGlobal = options['getGlobal'] || function (elementId, accessKey) {\n    initGlobalObject(elementId);\n    return window[globalAccessKey][elementId][accessKey];\n  };\n\n  const setGlobal = options['setGlobal'] || function (elementId, accessKey, value) {\n    let returnValue = getGlobal(elementId);\n\n    if (!returnValue) {\n      window[globalAccessKey][elementId][accessKey] = window[globalAccessKey][elementId][accessKey] || value;\n      returnValue = window[globalAccessKey][elementId][accessKey];\n    }\n\n    return returnValue;\n  };\n\n  const waveContext = this;\n  let element = document.getElementById(element_id);\n  if (!element) return;\n  element.crossOrigin = \"anonymous\";\n\n  function run() {\n    //user gesture has happened\n    this.activated = true; //track current wave for canvas\n\n    this.activeCanvas = this.activeCanvas || {};\n    this.activeCanvas[canvas_id] = JSON.stringify(options); //track elements used so multiple elements use the same data\n\n    this.activeElements[element_id] = this.activeElements[element_id] || {};\n    if (this.activeElements[element_id].count) this.activeElements[element_id].count += 1;else this.activeElements[element_id].count = 1;\n    const currentCount = this.activeElements[element_id].count;\n    const audioCtx = setGlobal(element.id, 'audioCtx', new AudioContext());\n    const analyser = setGlobal(element.id, 'analyser', audioCtx.createAnalyser());\n    let source = getGlobal(element.id, 'source');\n\n    if (source) {\n      if (source.mediaElement !== element) {\n        source = audioCtx.createMediaElementSource(element);\n      }\n    } else {\n      source = audioCtx.createMediaElementSource(element);\n    }\n\n    setGlobal(element.id, 'source', source); //beep test for ios\n\n    const oscillator = audioCtx.createOscillator();\n    oscillator.frequency.value = 1;\n    oscillator.connect(audioCtx.destination);\n    oscillator.start(0);\n    oscillator.stop(0);\n    source.connect(analyser);\n    source.connect(audioCtx.destination);\n    analyser.fftsize = 32768;\n    const bufferLength = analyser.frequencyBinCount;\n    const data = new Uint8Array(bufferLength);\n    let frameCount = 1;\n\n    function renderFrame() {\n      //only run one wave visual per canvas\n      if (JSON.stringify(options) !== this.activeCanvas[canvas_id]) {\n        return;\n      } //if the element or canvas go out of scope, stop animation\n\n\n      if (!document.getElementById(element_id) || !document.getElementById(canvas_id)) return;\n      requestAnimationFrame(renderFrame);\n      frameCount++; //check if this element is the last to be called \n\n      if (!(currentCount < this.activeElements[element_id].count)) {\n        analyser.getByteFrequencyData(data);\n        this.activeElements[element_id].data = data;\n      }\n\n      this.visualize(this.activeElements[element_id].data, canvas_id, options, frameCount);\n    }\n\n    renderFrame = renderFrame.bind(this);\n    renderFrame();\n  }\n\n  const create = () => {\n    //remove all events\n    [\"touchstart\", \"touchmove\", \"touchend\", \"mouseup\", \"click\", \"play\"].forEach(event => {\n      element.removeEventListener(event, create, {\n        once: true\n      });\n    });\n    run.call(waveContext);\n  };\n\n  if (this.activated || options['skipUserEventsWatcher']) {\n    run.call(waveContext);\n  } else {\n    //wait for a valid user gesture \n    document.body.addEventListener(\"touchstart\", create, {\n      once: true\n    });\n    document.body.addEventListener(\"touchmove\", create, {\n      once: true\n    });\n    document.body.addEventListener(\"touchend\", create, {\n      once: true\n    });\n    document.body.addEventListener(\"mouseup\", create, {\n      once: true\n    });\n    document.body.addEventListener(\"click\", create, {\n      once: true\n    });\n    element.addEventListener(\"play\", create, {\n      once: true\n    });\n  }\n}\n\nfunction fromFile(file) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  //options\n  if (!options.stroke) options.stroke = 10;\n  let audio = new Audio();\n  audio.src = file;\n  let audioCtx = new AudioContext();\n  let analyser = audioCtx.createAnalyser();\n  let source = audioCtx.createMediaElementSource(audio);\n  source.connect(analyser);\n  analyser.fftSize = 64;\n  let bufferLength = analyser.frequencyBinCount;\n  let file_data;\n  let temp_data = new Uint8Array(bufferLength);\n  let getWave;\n  let fdi = 0;\n  let self = this;\n  audio.addEventListener('loadedmetadata', async function () {\n    while (audio.duration === Infinity) {\n      await new Promise(r => setTimeout(r, 1000));\n      audio.currentTime = 10000000 * Math.random();\n    }\n\n    audio.currentTime = 0;\n    audio.play();\n  });\n\n  audio.onplay = function () {\n    let findSize = size => {\n      for (let range = 1; range <= 40; range++) {\n        let power = 2 ** range;\n        if (size <= power) return power;\n      }\n    };\n\n    let d = audio.duration;\n    audio.playbackRate = 16;\n    d = d / audio.playbackRate;\n    let drawRate = 20; //ms\n\n    let size = d / (drawRate / 1000) * (analyser.fftSize / 2);\n    size = findSize(size);\n    file_data = new Uint8Array(size);\n    getWave = setInterval(function () {\n      analyser.getByteFrequencyData(temp_data);\n\n      for (let data in temp_data) {\n        data = temp_data[data];\n        file_data[fdi] = data;\n        fdi++;\n      }\n    }, drawRate);\n  };\n\n  audio.onended = function () {\n    if (audio.currentTime === audio.duration && file_data !== undefined) {\n      clearInterval(getWave);\n      let canvas = document.createElement(\"canvas\");\n      canvas.height = window.innerHeight;\n      canvas.width = window.innerWidth;\n      self.visualize(file_data, canvas, options);\n      let image = canvas.toDataURL(\"image/jpg\");\n      self.onFileLoad(image);\n      canvas.remove();\n    }\n  };\n}\n\nfunction fromStream(stream, canvas_id) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  this.current_stream.id = canvas_id;\n  this.current_stream.options = options;\n  let audioCtx, analyser, source;\n\n  if (!this.sources[stream.toString()]) {\n    audioCtx = new AudioContext();\n    analyser = audioCtx.createAnalyser();\n    source = audioCtx.createMediaStreamSource(stream);\n    source.connect(analyser);\n    source.connect(audioCtx.destination); //playback audio\n\n    this.sources[stream.toString()] = {\n      \"audioCtx\": audioCtx,\n      \"analyser\": analyser,\n      \"source\": source\n    };\n  } else {\n    cancelAnimationFrame(this.sources[stream.toString()].animation);\n    audioCtx = this.sources[stream.toString()].audioCtx;\n    analyser = this.sources[stream.toString()].analyser;\n    source = this.sources[stream.toString()].source;\n  }\n\n  analyser.fftsize = 32768;\n  let bufferLength = analyser.frequencyBinCount;\n  this.current_stream.data = new Uint8Array(bufferLength);\n  let self = this;\n\n  function renderFrame() {\n    self.current_stream.animation = requestAnimationFrame(self.current_stream.loop);\n    self.sources[stream.toString()].animation = self.current_stream.animation;\n    analyser.getByteFrequencyData(self.current_stream.data);\n    self.visualize(self.current_stream.data, self.current_stream.id, self.current_stream.options);\n  }\n\n  this.current_stream.loop = renderFrame;\n  renderFrame();\n}\n\nfunction stopStream() {\n  cancelAnimationFrame(this.current_stream.animation);\n}\n\nfunction playStream() {\n  this.current_stream.loop();\n}\n\nvar fromStream$1 = {\n  fromStream,\n  stopStream,\n  playStream\n};\n\nvar drawWave = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w,\n    Helper\n  } = functionContext;\n  let {\n    colors\n  } = options;\n  const helper = new Helper(ctx); // data = helper.mutateData(data, \"shrink\", 200)\n\n  data = helper.mutateData(data, \"split\", 4)[0];\n  data = helper.mutateData(data, \"scale\", h);\n  let points = helper.getPoints(\"line\", w, [0, h], data.length, data, {\n    offset: 100\n  });\n  points.start = points.start.slice(0, points.end.length - 1);\n  points.start.push([w, h]);\n  points.start.push([0, h]);\n  helper.drawPolygon(points.start, {\n    lineColor: colors[0],\n    color: colors[1],\n    radius: h * .008\n  });\n};\n\nvar drawShine = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w\n  } = functionContext;\n  let cx = w / 2;\n  let cy = h / 2;\n  let r = h / 4;\n  let percent = (h / 2 - r) / 255;\n  let point_count = 512;\n  let increase = 360 / point_count * Math.PI / 180;\n\n  for (let point = 1; point <= point_count; point++) {\n    let p = data[600 % point]; //get value\n\n    p *= percent;\n    point++; //start at 1\n\n    let a = point * increase;\n    let sx = cx + r * Math.cos(a);\n    let sy = cy + r * Math.sin(a);\n    ctx.moveTo(sx, sy);\n    let dx = cx + (r + p) * Math.cos(a);\n    let dy = cy + (r + p) * Math.sin(a);\n    ctx.lineTo(dx, dy);\n  }\n\n  ctx.stroke();\n\n  if (options.colors[1]) {\n    ctx.arc(cx, cy, r * .90, 0, 2 * Math.PI);\n    ctx.fillStyle = options.colors[1];\n    ctx.fill();\n  }\n};\n\nvar drawRing = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w\n  } = functionContext;\n  let cx = w / 2;\n  let cy = h / 2;\n  let r = (h - 10) / 2;\n  let offset = r / 5;\n  let percent = (r - offset) / 255;\n  let point_count = 150;\n  let increase = 360 / point_count * Math.PI / 180;\n  ctx.arc(cx, cy, r, 0, 2 * Math.PI, true);\n  let fa = 0;\n  let fx = cx + (r - data[0] * percent) * Math.cos(fa);\n  let fy = cy + (r - data[0] * percent) * Math.sin(fa);\n  ctx.moveTo(fx, fy);\n  let q = 0;\n\n  for (let point = 0; point < point_count; point++) {\n    q += 1;\n\n    if (point >= point_count / 2) {\n      q -= 2;\n    }\n\n    let p = data[q]; //get value\n\n    p *= percent;\n    let a = point * increase;\n    let x = cx + (r - p) * Math.cos(a);\n    let y = cy + (r - p) * Math.sin(a);\n    ctx.lineTo(x, y);\n    ctx.arc(x, y, 2, 0, 2 * Math.PI);\n  }\n\n  ctx.lineTo(fx, fy);\n  ctx.stroke();\n  ctx.fillStyle = options.colors[1] || \"#fff0\";\n  ctx.fill();\n};\n\nvar drawBars = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w\n  } = functionContext;\n  let point_count = 64;\n  let percent = h / 255;\n  let increase = w / 64;\n  let breakpoint = Math.floor(point_count / options.colors.length);\n\n  for (let point = 1; point <= point_count; point++) {\n    let p = data[point]; //get value\n\n    p *= percent;\n    let x = increase * point;\n    ctx.moveTo(x, h);\n    ctx.lineTo(x, h - p);\n\n    if (point % breakpoint === 0) {\n      let i = point / breakpoint - 1;\n      ctx.strokeStyle = options.colors[i];\n      ctx.stroke();\n      ctx.beginPath();\n    }\n  }\n};\n\nvar drawDualbars = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w\n  } = functionContext;\n  let percent = h / 255;\n  let increase = w / 128;\n  let point_count = 128;\n  let min = 5;\n  let breakpoint = Math.floor(point_count / options.colors.length);\n\n  for (let point = 1; point <= point_count; point++) {\n    let p = data[point]; //get value\n\n    p += min;\n    p *= percent;\n    let x = increase * point;\n    let mid = h / 2 + p / 2;\n    ctx.moveTo(x, mid);\n    ctx.lineTo(x, mid - p);\n\n    if (point % breakpoint === 0) {\n      let i = point / breakpoint - 1;\n      ctx.strokeStyle = options.colors[i];\n      ctx.stroke();\n      ctx.beginPath();\n    }\n  }\n};\n\nvar drawOrbs = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w,\n    Helper\n  } = functionContext;\n  let {\n    colors\n  } = options;\n  const helper = new Helper(ctx);\n  data = helper.mutateData(data, \"organize\").mids;\n  data = helper.mutateData(data, \"split\", 2)[0];\n  data = helper.mutateData(data, \"shrink\", 100);\n  data = helper.mutateData(data, \"mirror\");\n  data = helper.mutateData(data, \"scale\", h);\n  data = helper.mutateData(data, \"amp\", .75);\n  let points = helper.getPoints(\"line\", w, [0, h / 2], data.length, data, {\n    offset: 50\n  });\n  points.start.forEach((start, i) => {\n    helper.drawLine(start, points.end[i], {\n      lineColor: colors[0]\n    });\n    helper.drawCircle(start, h * .01, {\n      color: colors[1] || colors[0]\n    });\n    helper.drawCircle(points.end[i], h * .01, {\n      color: colors[1] || colors[0]\n    });\n  });\n};\n\nvar drawFlower = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w\n  } = functionContext;\n  let min = 5;\n  let r = h / 4;\n  let offset = r / 2;\n  let cx = w / 2;\n  let cy = h / 2;\n  let point_count = 128;\n  let percent = (r - offset) / 255;\n  let increase = 360 / point_count * Math.PI / 180;\n  let breakpoint = Math.floor(point_count / options.colors.length);\n\n  for (let point = 1; point <= point_count; point++) {\n    let p = (data[point] + min) * percent;\n    let a = point * increase;\n    let sx = cx + (r - (p - offset)) * Math.cos(a);\n    let sy = cy + (r - (p - offset)) * Math.sin(a);\n    ctx.moveTo(sx, sy);\n    let dx = cx + (r + p) * Math.cos(a);\n    let dy = cy + (r + p) * Math.sin(a);\n    ctx.lineTo(dx, dy);\n\n    if (point % breakpoint === 0) {\n      let i = point / breakpoint - 1;\n      ctx.strokeStyle = options.colors[i];\n      ctx.stroke();\n      ctx.beginPath();\n    }\n  }\n\n  ctx.stroke();\n};\n\nvar drawFlowerBlocks = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w\n  } = functionContext;\n  let r = h / 4;\n  let cx = w / 2;\n  let cy = h / 2;\n  let point_count = 56;\n  let percent = r / 255;\n  let increase = 360 / point_count * Math.PI / 180;\n\n  for (let point = 1; point <= point_count; point++) {\n    let p = data[point] * percent;\n    let a = point * increase;\n    let ax = cx + (r - p / 2) * Math.cos(a);\n    let ay = cy + (r - p / 2) * Math.sin(a);\n    ctx.moveTo(ax, ay);\n    let bx = cx + (r + p) * Math.cos(a);\n    let by = cy + (r + p) * Math.sin(a);\n    ctx.lineTo(bx, by);\n    let dx = cx + (r + p) * Math.cos(a + increase);\n    let dy = cy + (r + p) * Math.sin(a + increase);\n    ctx.lineTo(dx, dy);\n    let ex = cx + (r - p / 2) * Math.cos(a + increase);\n    let ey = cy + (r - p / 2) * Math.sin(a + increase);\n    ctx.lineTo(ex, ey);\n    ctx.lineTo(ax, ay);\n  }\n\n  if (options.colors[1]) {\n    ctx.fillStyle = options.colors[1];\n    ctx.fill();\n  }\n\n  ctx.stroke();\n};\n\nvar drawBarsBlocks = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w\n  } = functionContext;\n  let percent = h / 255;\n  let width = w / 64;\n\n  for (let point = 0; point < 64; point++) {\n    let p = data[point]; //get value\n\n    p *= percent;\n    let x = width * point;\n    ctx.rect(x, h, width, -p);\n  }\n\n  ctx.fillStyle = options.colors[1] || options.colors[0];\n  ctx.stroke();\n  ctx.fill();\n};\n\nvar drawDualbarsBlocks = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w\n  } = functionContext;\n  let percent = h / 255;\n  let width = w / 50;\n\n  for (let point = 0; point <= 50; point++) {\n    let p = data[point]; //get value\n\n    p *= percent;\n    let x = width * point;\n    ctx.rect(x, h / 2 + p / 2, width, -p);\n  }\n\n  if (options.colors[1]) {\n    ctx.fillStyle = options.colors[1];\n    ctx.fill();\n  }\n\n  ctx.stroke();\n};\n\nvar drawStar = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w\n  } = functionContext;\n  let r = h / 4;\n  let offset = r / 4;\n  let cx = w / 2;\n  let cy = h / 2;\n  let point_count = 120;\n  let percent = (r - offset - 35) / 255;\n  let increase = 360 / point_count * Math.PI / 180;\n  let top = [];\n  let bottom = [];\n\n  for (let point = 1; point <= point_count; point++) {\n    let p = data[200 % point] * percent;\n    let a = point * increase;\n    let sx = cx + (r - p + offset) * Math.cos(a);\n    let sy = cy + (r - p + offset) * Math.sin(a);\n    ctx.moveTo(sx, sy);\n    bottom.push({\n      x: sx,\n      y: sy\n    });\n    let dx = cx + (r + p + offset) * Math.cos(a);\n    let dy = cy + (r + p + offset) * Math.sin(a);\n    ctx.lineTo(dx, dy);\n    top.push({\n      x: dx,\n      y: dy\n    });\n  }\n\n  ctx.moveTo(top[0].x, top[0].y);\n\n  for (let t in top) {\n    t = top[t];\n    ctx.lineTo(t.x, t.y);\n  }\n\n  ctx.closePath();\n  ctx.moveTo(bottom[0].x, bottom[0].y);\n\n  for (let b = bottom.length - 1; b >= 0; b++) {\n    b = bottom[b];\n    ctx.lineTo(b.x, b.y);\n  }\n\n  ctx.closePath();\n\n  if (options.colors[1]) {\n    ctx.fillStyle = options.colors[1];\n    ctx.fill();\n  }\n\n  ctx.stroke(); //inner color\n\n  ctx.beginPath();\n  ctx.moveTo(bottom[0].x, bottom[0].y);\n\n  for (let b in bottom) {\n    b = bottom[b];\n    ctx.lineTo(b.x, b.y);\n  }\n\n  ctx.closePath();\n\n  if (options.colors[2]) {\n    ctx.fillStyle = options.colors[2];\n    ctx.fill();\n  }\n\n  ctx.stroke();\n};\n\nvar drawRoundWave = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w\n  } = functionContext;\n  let r = h / 4;\n  let cx = w / 2;\n  let cy = h / 2;\n  let point_count = 100;\n  let percent = r / 255;\n  let increase = 360 / point_count * Math.PI / 180;\n  let p = 0; // let z = (data[0] + min + offset) * percent;\n\n  let sx = cx + (r + p) * Math.cos(0);\n  let sy = cy + (r + p) * Math.sin(0);\n  ctx.moveTo(sx, sy);\n\n  for (let point = 1; point <= point_count; point++) {\n    let p = data[350 % point] * percent;\n    let a = point * increase;\n    let dx = cx + (r + p) * Math.cos(a);\n    let dy = cy + (r + p) * Math.sin(a);\n    ctx.lineTo(dx, dy);\n  }\n\n  ctx.closePath();\n  ctx.stroke();\n\n  if (options.colors[1]) {\n    ctx.fillStyle = options.colors[1];\n    ctx.fill();\n  }\n};\n\nvar drawRings = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w,\n    Helper\n  } = functionContext;\n  let {\n    colors\n  } = options;\n  let helper = new Helper(ctx);\n  let minDimension = h < w ? h : w;\n  data = helper.mutateData(data, \"organize\");\n  data = [data.mids, data.vocals];\n  data[0] = helper.mutateData(data[0], \"scale\", minDimension / 4);\n  data[1] = helper.mutateData(data[1], \"scale\", minDimension / 8);\n  data[0] = helper.mutateData(data[0], \"shrink\", 1 / 5);\n  data[0] = helper.mutateData(data[0], \"split\", 2)[0];\n  data[0] = helper.mutateData(data[0], \"reverb\");\n  data[1] = helper.mutateData(data[1], \"reverb\");\n  let outerCircle = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data[0].length, data[0]);\n  let innerCircle = helper.getPoints(\"circle\", minDimension / 4, [w / 2, h / 2], data[1].length, data[1]);\n  helper.drawPolygon(outerCircle.end, {\n    close: true,\n    radius: 4,\n    lineColor: colors[0],\n    color: colors[1]\n  });\n  helper.drawPolygon(innerCircle.end, {\n    close: true,\n    radius: 4,\n    lineColor: colors[2],\n    color: colors[3]\n  });\n  let middle = (minDimension / 4 + minDimension / 2) / 2;\n  let largerInner = data[1] = helper.mutateData(data[1], \"scale\", minDimension / 4 - minDimension / 2);\n  let innerBars = helper.getPoints(\"circle\", middle, [w / 2, h / 2], data[1].length, largerInner);\n  innerBars.start.forEach((start, i) => {\n    helper.drawLine(start, innerBars.end[i], {\n      lineColor: colors[4] || colors[2]\n    });\n  });\n};\n\nvar drawShineRings = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w,\n    Helper\n  } = functionContext;\n  let {\n    colors\n  } = options;\n  let helper = new Helper(ctx);\n  let minDimension = h < w ? h : w;\n  data = helper.mutateData(data, \"organize\");\n  data.vocals = helper.mutateData(data.vocals, \"scale\", minDimension / 2 / 2);\n  data.base = helper.mutateData(data.base, \"scale\", minDimension / 2 / 2);\n  let outerBars = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.vocals.length, data.vocals);\n  let innerWave = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.vocals.length, data.vocals, {\n    offset: 100\n  });\n  let thinLine = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.base.length, data.base, {\n    offset: 100\n  });\n  outerBars.start.forEach((start, i) => {\n    helper.drawLine(start, outerBars.end[i], {\n      lineColor: colors[0]\n    });\n  });\n  helper.drawPolygon(innerWave.start, {\n    close: true,\n    lineColor: colors[1],\n    color: colors[3],\n    radius: 5\n  });\n  helper.drawPolygon(thinLine.start, {\n    close: true,\n    lineColor: colors[2],\n    color: colors[4],\n    radius: 5\n  });\n};\n\nvar drawCubes = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w,\n    Helper\n  } = functionContext;\n  let {\n    colors\n  } = options;\n  let helper = new Helper(ctx);\n  data = helper.mutateData(data, \"organize\").base;\n  data = helper.mutateData(data, \"shrink\", 20).slice(0, 19);\n  data = helper.mutateData(data, \"scale\", h);\n  let points = helper.getPoints(\"line\", w, [0, h], data.length, data);\n  let spacing = 5;\n  let squareSize = w / 20 - spacing;\n  let colorIndex = 0;\n  points.start.forEach((start, i) => {\n    let squareCount = Math.ceil(data[i] / squareSize); //find color stops from total possible squares in bar \n\n    let totalSquares = (h - spacing * (h / squareSize)) / squareSize;\n    let colorStop = Math.ceil(totalSquares / colors.length);\n\n    for (let j = 1; j <= squareCount; j++) {\n      let origin = [start[0], start[1] - squareSize * j - spacing * j];\n      helper.drawSquare(origin, squareSize, {\n        color: colors[colorIndex],\n        lineColor: \"black\"\n      });\n\n      if (j % colorStop == 0) {\n        colorIndex++;\n        if (colorIndex >= colors.length) colorIndex = colors.length - 1;\n      }\n    }\n\n    colorIndex = 0;\n  });\n};\n\nvar drawBigBars = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w,\n    Helper\n  } = functionContext;\n  let {\n    colors\n  } = options;\n  const helper = new Helper(ctx);\n  data = helper.mutateData(data, \"organize\").vocals;\n  data = helper.mutateData(data, \"shrink\", 10);\n  data = helper.mutateData(data, \"scale\", h);\n  data = helper.mutateData(data, \"amp\", 1);\n  let points = helper.getPoints(\"line\", w, [0, h / 2], data.length, data, {\n    offset: 50\n  });\n  let colorIndex = 0;\n  let colorStop = Math.ceil(data.length / colors.length);\n  points.start.forEach((start, i) => {\n    if ((i + 1) % colorStop == 0) colorIndex++;\n    helper.drawRectangle(start, data[i], w / data.length, {\n      color: colors[colorIndex]\n    });\n  });\n};\n\nvar drawShockwave = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w,\n    Helper\n  } = functionContext;\n  let {\n    colors\n  } = options;\n  let helper = new Helper(ctx);\n  data = helper.mutateData(data, \"shrink\", 300);\n  data = helper.mutateData(data, \"scale\", h / 2);\n  data = helper.mutateData(data, \"split\", 4).slice(0, 3);\n  let colorIndex = 0;\n  data.forEach(points => {\n    let wavePoints = helper.getPoints(\"line\", w, [0, h / 2], points.length, points);\n    helper.drawPolygon(wavePoints.end, {\n      lineColor: colors[colorIndex],\n      radius: h * .015\n    });\n    let invertedPoints = helper.getPoints(\"line\", w, [0, h / 2], points.length, points, {\n      offset: 100\n    });\n    helper.drawPolygon(invertedPoints.start, {\n      lineColor: colors[colorIndex],\n      radius: h * .015\n    });\n    colorIndex++;\n  });\n};\n\nvar drawFireworks = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w,\n    Helper\n  } = functionContext;\n  let {\n    colors\n  } = options;\n  const helper = new Helper(ctx);\n  data = helper.mutateData(data, \"shrink\", 200).slice(0, 120);\n  data = helper.mutateData(data, \"mirror\");\n  data = helper.mutateData(data, \"scale\", h / 4 + h / 4 * .35);\n  let points = helper.getPoints(\"circle\", h / 2, [w / 2, h / 2], data.length, data, {\n    offset: 35,\n    rotate: 270\n  });\n  points.start.forEach((start, i) => {\n    helper.drawLine(start, points.end[i]);\n  });\n  helper.drawPolygon(points.start, {\n    close: true\n  });\n  points.end.forEach((end, i) => {\n    helper.drawCircle(end, h * .01, {\n      color: colors[0]\n    });\n  });\n};\n\nvar drawStatic = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w,\n    Helper\n  } = functionContext;\n  let helper = new Helper(ctx);\n  data = helper.mutateData(data, \"shrink\", 1 / 8);\n  data = helper.mutateData(data, \"split\", 2)[0];\n  data = helper.mutateData(data, \"scale\", h);\n  let points = helper.getPoints(\"line\", w, [0, h / 2], data.length, data, {\n    offset: 50\n  });\n  let prevPoint = null;\n  points.start.forEach((start, i) => {\n    if (prevPoint) {\n      helper.drawLine(prevPoint, start);\n    }\n\n    helper.drawLine(start, points.end[i]);\n    prevPoint = points.end[i];\n  });\n};\n\nvar drawWeb = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w,\n    Helper\n  } = functionContext;\n  let {\n    colors\n  } = options;\n  const helper = new Helper(ctx);\n  let minDimension = h < w ? h : w;\n  data = helper.mutateData(data, \"shrink\", 100);\n  data = helper.mutateData(data, \"split\", 2)[0];\n  data = helper.mutateData(data, \"scale\", h / 4);\n  let dataCopy = data;\n  let points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.length, data);\n  helper.drawPolygon(points.end, {\n    close: true\n  });\n  points.start.forEach((start, i) => {\n    helper.drawLine(start, points.end[i]);\n  });\n  data = helper.mutateData(data, \"scale\", .7);\n  points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.length, data);\n  helper.drawPolygon(points.end, {\n    close: true\n  });\n  data = helper.mutateData(data, \"scale\", .3);\n  points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.length, data);\n  helper.drawPolygon(points.end, {\n    close: true\n  });\n  helper.drawCircle([w / 2, h / 2], minDimension / 2, {\n    color: colors[2]\n  });\n  dataCopy = helper.mutateData(dataCopy, \"scale\", 1.4);\n  points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], dataCopy.length, dataCopy);\n  points.end.forEach((end, i) => {\n    helper.drawCircle(end, minDimension * .01, {\n      color: colors[1],\n      lineColor: colors[1] || colors[0]\n    });\n  });\n};\n\nvar drawStitches = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w,\n    Helper\n  } = functionContext;\n  let helper = new Helper(ctx);\n  let minDimension = h < w ? h : w;\n  data = helper.mutateData(data, \"shrink\", 200);\n  data = helper.mutateData(data, \"split\", 2)[0];\n  data = helper.mutateData(data, \"scale\", h / 2);\n  let points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.length, data, {\n    offset: 50\n  });\n  helper.drawPolygon(points.end, {\n    close: true\n  });\n  helper.drawPolygon(points.start, {\n    close: true\n  });\n\n  for (let i = 0; i < points.start.length; i += 1) {\n    let start = points.start[i];\n    i++;\n    let end = points.end[i] || points.end[0];\n    helper.drawLine(start, end);\n    helper.drawLine(end, points.start[i + 1] || points.start[0]);\n  }\n};\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar origami_1 = createCommonjsModule(function (module, exports) {\n  /*!\n   * Origami.js 0.5.0\n   * https://origamijs.com/\n   *\n   * Copyright Raphael Amorim 2016\n   * Released under the GPL-4.0 license\n   *\n   * Date: 2016-09-23T03:42Z\n   */\n  (function (window) {\n    /**\n     * Config object: Maintain internal state\n     * Later exposed as Origami.config\n     * `config` initialized at top of scope\n     */\n    var Origami = {\n      // Current Paper\n      paper: null\n    };\n    var config = {\n      // Document Styles\n      documentStyles: [],\n      // Virtual Styles\n      virtualStyles: {},\n      // All contexts saved\n      contexts: [],\n      // Origami Shapes Defaults\n      defaults: {\n        arc: {\n          background: 'rgba(0, 0, 0, 0)',\n          strokeStyle: 'rgba(0, 0, 0, 0)',\n          lineWidth: null\n        },\n        rect: {\n          background: 'rgba(0, 0, 0, 0)',\n          strokeStyle: 'rgba(0, 0, 0, 0)',\n          lineWidth: null\n        },\n        polygon: {\n          background: 'rgba(0, 0, 0, 0)',\n          strokeStyle: 'rgba(0, 0, 0, 0)',\n          lineWidth: null\n        },\n        line: {\n          strokeStyle: 'rgba(0, 0, 0, 0)',\n          lineWidth: null\n        },\n        text: {\n          font: '14px Helvetica',\n          strokeStyle: 'rgba(0, 0, 0, 0)',\n          color: '#000',\n          lineWidth: null\n        }\n      }\n    };\n    var prefix = \"[origami.js]\";\n\n    Origami.warning = function warning(message, obj) {\n      if (console && console.warn) console.warn(prefix, message, obj);\n    };\n\n    Origami.error = function error(message) {\n      throw new Error(prefix.concat(' ' + message));\n    };\n\n    Origami.init = function (el) {\n      if (el.canvas) {\n        el = el.canvas;\n      } else {\n        el = document.querySelector(el);\n      }\n\n      if (!el) this.error('Please use a valid selector or canvas context');\n      var existentContext = exists(el, config.contexts);\n\n      if (existentContext) {\n        this.paper = existentContext;\n        return this;\n      }\n\n      if (!el.getContext) this.error('Please verify if it\\'s a valid canvas element');\n      el.width = el.clientWidth;\n      el.height = el.clientHeight;\n      var context = el.getContext('2d');\n      var current = {\n        element: el,\n        queue: [],\n        index: config.contexts.length,\n        flip: false,\n        frame: null,\n        ctx: context,\n        width: el.width,\n        height: el.height\n      };\n      config.contexts.push(current);\n      this.paper = current;\n      return this;\n    };\n\n    Origami.styles = function () {\n      if (!config.virtualStyles.length) defineDocumentStyles();\n      var selectors = arguments;\n\n      if (!selectors.length) {\n        config.virtualStyles['empty'] = true;\n        return this;\n      }\n\n      for (var i = 0; i < selectors.length; i++) {\n        var style = styleRuleValueFrom(selectors[i], config.documentStyles[0] || []);\n        config.virtualStyles[selectors[i]] = style;\n      }\n\n      return this;\n    };\n\n    Origami.getPaper = function () {\n      return this.paper;\n    };\n\n    Origami.canvasCtx = function () {\n      return this.paper.ctx;\n    };\n\n    Origami.getContexts = function () {\n      return config.contexts;\n    };\n\n    Origami.cleanContexts = function () {\n      config.contexts = [];\n    };\n\n    Origami.createComponent = function (component, fn) {\n      Origami[component] = function (props) {\n        fn.bind(this, this, props)();\n        return this;\n      };\n    };\n\n    Origami.fn = {};\n\n    Origami.draw = function (options) {\n      var self = this,\n          customRender = false,\n          ctx = self.paper.ctx;\n\n      if (typeof options === 'string') {\n        customRender = new origami.fn[options](self.paper);\n        self.paper['ctx'] = customRender;\n      }\n\n      var abs = new Screen(self.paper),\n          queueList = self.paper.queue;\n\n      for (var i = 0; i < queueList.length; i++) {\n        if (queueList[i].loaded === false || queueList[i].failed) {\n          Origami.warning('couldn\\'t able to load:', queueList[i].params);\n        }\n\n        abs[queueList[i].assign](queueList[i].params);\n      }\n\n      self.paper.queue = [];\n\n      if (customRender) {\n        customRender.draw();\n        self.paper.ctx = ctx;\n      }\n\n      if (typeof options === 'function') options();\n    };\n\n    Origami.load = function (fn) {\n      var mOrigami = clone(this);\n      mOrigami.paper = this.paper;\n      var loadInterval = setInterval(function () {\n        var dataLoad = mOrigami.paper.queue.filter(function (item) {\n          return item.loaded === false && !item.failed;\n        }); // When already loaded\n\n        if (!dataLoad.length) {\n          clearInterval(loadInterval);\n          fn.bind(mOrigami, mOrigami)();\n        }\n      }, 1);\n    };\n\n    function Queue(assign, params, loaded) {\n      this.paper.queue.push({\n        assign: assign,\n        params: params,\n        loaded: loaded\n      });\n    }\n\n    var queue = Queue.bind(Origami); // Utilities.js\n\n    var hasOwn = Object.prototype.hasOwnProperty;\n    /**\n     * Check if element exists in a Array of NodeItems\n     * @param {NodeItem} current nodeItem to check\n     * @param {Array} array of NodeItems\n     * @returns {NodeItem} NodeItem exitent in array\n     */\n\n    function exists(el, arr) {\n      for (var i = 0; i < arr.length; i++) {\n        if (arr[i].element.isEqualNode(el)) return arr[i];\n      }\n\n      return false;\n    }\n    /**\n     * Filter arguments by rules\n     * @param {Array} methods arguments\n     * @param {Object} rules to apply\n     * @returns {Object} arguments filtered\n     */\n\n\n    function argsByRules(argsArray, rules) {\n      var params = rules || ['x', 'y', 'width', 'height'],\n          args = {};\n\n      for (var i = 0; i < argsArray.length; i++) {\n        if (typeof argsArray[i] === \"object\") args[\"style\"] = argsArray[i];else if (params.length) args[params.shift()] = argsArray[i];\n      }\n\n      args.style = normalizeStyle(args.style);\n      if (typeof args.x === 'string' && typeof args.y === 'string') args = smartCoordinates(args);\n      return args;\n    }\n\n    function getBorderStyleObject(prop) {\n      return normalizeStyle({\n        border: prop\n      });\n    }\n\n    function normalizeStyle(style) {\n      if (!style) style = {};\n      var borderSize = style.borderSize || null,\n          borderColor = style.borderColor || null,\n          borderStyle = style.borderStyle || [];\n\n      if (style.border) {\n        var border = [],\n            borderString = style.border; // 0 - Size: [0-9]px\n\n        border = border.concat(style.border.match(/[0-9]*\\.?[0-9]px?/i));\n        borderString = borderString.replace(/[0-9]*\\.?[0-9]px?/i, ''); // 1 - Style\n\n        border = border.concat(borderString.match(/solid|dashed|dotted/i));\n        borderString = borderString.replace(/solid|dashed|dotted/i, ''); // 2 - Color\n\n        border = border.concat(borderString.match(/[^\\s]+/i));\n        if (!borderSize) borderSize = border[0];\n        if (!borderColor) borderColor = border[2];\n        borderStyle = border[1];\n      }\n\n      if (borderSize) borderSize = borderSize.replace(/[^0-9]/g, '');\n\n      if (typeof borderStyle === 'string') {\n        if (borderStyle === 'dashed') borderStyle = [12];else if (borderStyle === 'dotted') borderStyle = [3];else borderStyle = [];\n      }\n\n      style['borderSize'] = borderSize;\n      style['borderStyle'] = borderStyle;\n      style['borderColor'] = borderColor;\n      return style;\n    }\n    /**\n     * Return args object with new coordinates based on behavior\n     * @returns {Object} args\n     */\n\n\n    function smartCoordinates(args) {\n      var x = args.x,\n          y = args.y;\n      var paper = Origami.getPaper(),\n          elmWidth = paper.element.width,\n          elmHeight = paper.element.height,\n          radius = args.r || 0;\n      var width = args.width || radius,\n          height = args.height || width;\n      var axis = {\n        x: ['right', 'center', 'left'],\n        y: ['top', 'center', 'bottom']\n      };\n\n      if (axis.x.indexOf(x) !== -1) {\n        if (x === 'right') x = Math.floor(elmWidth - width);else if (x === 'center') {\n          if (radius) x = Math.floor(elmWidth / 2);else x = Math.floor(elmWidth / 2 - width / 2);\n        } else if (x === 'left') x = radius;\n      } else if ((x + '').substr(-1) === '%') {\n        x = elmWidth * parseInt(x, 10) / 100;\n      } else {\n        x = 0;\n      }\n\n      if (axis.y.indexOf(y) !== -1) {\n        if (y === 'top') y = radius;else if (y === 'center') {\n          if (radius) y = Math.floor(elmHeight / 2);else y = Math.floor(elmHeight / 2 - height / 2);\n        } else if (y === 'bottom') y = Math.floor(elmHeight - height);\n      } else if ((y + '').substr(-1) === '%') {\n        y = elmHeight * parseInt(y, 10) / 100;\n      } else {\n        y = 0;\n      }\n\n      args.y = y;\n      args.x = x;\n      return args;\n    }\n    /**\n     * Return all documentStyles to a especified origami context\n     * @returns undefined\n     */\n\n\n    function defineDocumentStyles() {\n      for (var i = 0; i < document.styleSheets.length; i++) {\n        var mysheet = document.styleSheets[i],\n            myrules = mysheet.cssRules ? mysheet.cssRules : mysheet.rules;\n        config.documentStyles.push(myrules);\n      }\n    }\n    /**\n     * Merge defaults with user options\n     * @param {Object} defaults Default settings\n     * @param {Object} options User options\n     * @returns {Object} Merged values of defaults and options\n     */\n\n\n    function extend(a, b, undefOnly) {\n      for (var prop in b) {\n        if (hasOwn.call(b, prop)) {\n          // Avoid \"Member not found\" error in IE8 caused by messing with window.constructor\n          // This block runs on every environment, so `global` is being used instead of `window`\n          // to avoid errors on node.\n          if (prop !== \"constructor\" || a !== commonjsGlobal) {\n            if (b[prop] === undefined) {\n              delete a[prop];\n            } else if (!(undefOnly && typeof a[prop] !== \"undefined\")) {\n              a[prop] = b[prop];\n            }\n          }\n        }\n      }\n\n      return a;\n    }\n    /**\n     * Get Style Rule from a specified element\n     * @param {String} selector from element\n     * @param {Array} Document Style Rules\n     * @returns {Object} Merged values of defaults and options\n     */\n\n\n    function styleRuleValueFrom(selector, documentStyleRules) {\n      for (var j = 0; j < documentStyleRules.length; j++) {\n        if (documentStyleRules[j].selectorText && documentStyleRules[j].selectorText.toLowerCase() === selector) {\n          return documentStyleRules[j].style;\n        }\n      }\n    }\n    /**\n     * Clone a object\n     * @param {Object} object\n     * @returns {Object} cloned object\n     */\n\n\n    function clone(obj) {\n      if (null == obj || \"object\" != typeof obj) return obj;\n      var copy = obj.constructor();\n\n      for (var attr in obj) {\n        if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n      }\n\n      return copy;\n    }\n\n    function Screen(currentContext) {\n      this.paper = currentContext;\n    }\n\n    Screen.prototype.translate = function (params) {\n      this.paper.ctx.translate(params.x, params.y);\n    };\n\n    Screen.prototype.background = function (params) {\n      this.paper.element.style.backgroundColor = params.color;\n    };\n\n    Screen.prototype.restore = function () {\n      this.paper.ctx.restore();\n    };\n\n    Screen.prototype.save = function () {\n      this.paper.ctx.save();\n    };\n\n    Screen.prototype.composition = function (params) {\n      this.paper.ctx.globalCompositeOperation = params.globalComposite;\n    };\n\n    Screen.prototype.rotate = function (params) {\n      this.paper.ctx.rotate(params.degrees);\n    };\n\n    Screen.prototype.scale = function (params) {\n      this.paper.ctx.scale(params.width, params.height);\n    };\n\n    Screen.prototype.flip = function (params) {\n      this.paper.flip = 'horizontal';\n      if (params.type && typeof params.type === 'string') this.paper.flip = params.type;\n    };\n\n    Screen.prototype.flipEnd = function () {\n      this.paper.flip = false;\n    };\n\n    Screen.prototype.clear = function () {\n      this.paper.ctx.clearRect(0, 0, this.paper.width, this.paper.height);\n    };\n\n    function ArcShape(params) {\n      var args = params.args,\n          style = args.style,\n          def = config.defaults.arc;\n      this.paper.ctx.beginPath();\n      this.paper.ctx.setLineDash(style.borderStyle);\n      this.paper.ctx.arc(args.x, args.y, args.r || def.radius, args.sAngle || 0, args.eAngle || 2 * Math.PI);\n      this.paper.ctx.fillStyle = style.background || style.bg ? style.background || style.bg : def.background;\n      this.paper.ctx.fill();\n      this.paper.ctx.lineWidth = style.borderSize ? style.borderSize : def.lineWidth;\n      this.paper.ctx.strokeStyle = style.borderColor ? style.borderColor : def.strokeStyle;\n      this.paper.ctx.stroke();\n      this.paper.ctx.setLineDash([]);\n      this.paper.ctx.closePath();\n    }\n\n    Screen.prototype.arc = ArcShape;\n\n    Origami.arc = function () {\n      var args = [].slice.call(arguments);\n      args = argsByRules(args, ['x', 'y', 'r', 'sAngle', 'eAngle']);\n      queue('arc', {\n        args: args\n      });\n      return this;\n    };\n\n    function ImageShape(params) {\n      var image = params.image,\n          x = params.x,\n          y = params.y,\n          width = params.width,\n          height = params.height;\n      this.paper.ctx.save();\n\n      if (this.paper.flip) {\n        if (this.paper.flip === 'horizontal') {\n          this.paper.ctx.scale(-1, 1);\n          width = width * -1;\n          x = x * -1;\n        }\n\n        if (this.paper.flip === 'vertical') {\n          this.paper.ctx.scale(1, -1);\n          height = height * -1;\n          y = y * -1;\n        }\n      }\n\n      this.paper.ctx.beginPath();\n      this.paper.ctx.drawImage(image, Math.floor(x || 0), Math.floor(y || 0), width, height);\n      this.paper.ctx.closePath();\n      this.paper.ctx.restore();\n    }\n\n    Screen.prototype.image = ImageShape;\n\n    Origami.image = function (image, x, y, width, height) {\n      var self = this;\n      if (!image) return this;\n\n      if (typeof image === 'string') {\n        var img = new Image();\n        img.src = image;\n        image = img;\n      }\n\n      var item = {\n        image: image,\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n      if (typeof item.x === 'string' && typeof item.y === 'string') item = smartCoordinates(item);\n\n      if (image.complete) {\n        item.width = width || image.naturalWidth;\n        item.height = height || image.naturalHeight;\n        queue('image', item);\n        return self;\n      }\n\n      queue('image', item, false);\n      var reference = self.paper.queue.length - 1,\n          currentQueue = config.contexts[this.paper.index].queue[reference];\n      image.addEventListener('load', function () {\n        if (!currentQueue) return false;\n        currentQueue.params.width = item.width || image.naturalWidth;\n        currentQueue.params.height = item.height || image.naturalHeight;\n        currentQueue.loaded = true;\n      });\n      image.addEventListener('error', function () {\n        if (!currentQueue) return false;\n        currentQueue.failed = true;\n      });\n      return self;\n    };\n\n    function LineShape(params) {\n      var def = config.defaults.line,\n          style = params.style,\n          pointA = params.pointA,\n          pointB = params.pointB;\n      this.paper.ctx.beginPath();\n      this.paper.ctx.setLineDash(style.borderStyle);\n      this.paper.ctx.moveTo(pointA.x || 0, pointA.y || 0);\n      this.paper.ctx.lineTo(pointB.x || 0, pointB.y || 0);\n      this.paper.ctx.lineWidth = style.borderSize ? style.borderSize : def.lineWidth;\n      this.paper.ctx.strokeStyle = style.borderColor ? style.borderColor : def.strokeStyle;\n      this.paper.ctx.stroke();\n      this.paper.ctx.setLineDash([]);\n      this.paper.ctx.closePath();\n    }\n\n    Screen.prototype.line = LineShape;\n\n    Origami.line = function (pointA, pointB, style) {\n      style = normalizeStyle(style);\n      queue('line', {\n        pointA: pointA,\n        pointB: pointB,\n        style: style\n      });\n      return this;\n    };\n\n    function PolygonShape(params) {\n      var args = params.args,\n          style = params.style,\n          def = config.defaults.polygon;\n      this.paper.ctx.beginPath();\n      this.paper.ctx.setLineDash(style.borderStyle);\n      this.paper.ctx.fillStyle = style.background ? style.background : def.background;\n      this.paper.ctx.lineWidth = style.borderSize ? style.borderSize : def.lineWidth;\n      this.paper.ctx.strokeStyle = style.borderColor ? style.borderColor : def.strokeStyle;\n\n      for (var p = 0; p < args.length; p++) {\n        if (!args[p].x) continue;\n        if (p) this.paper.ctx.lineTo(args[p].x, args[p].y);else this.paper.ctx.moveTo(args[p].x, args[p].y);\n      }\n\n      this.paper.ctx.fill();\n      this.paper.ctx.stroke();\n      this.paper.ctx.setLineDash([]);\n      this.paper.ctx.closePath();\n    }\n\n    Screen.prototype.polygon = PolygonShape;\n\n    Origami.polygon = function () {\n      var args = [].slice.call(arguments),\n          settedArgs = argsByRules(args);\n      queue('polygon', {\n        style: settedArgs.style,\n        args: args\n      });\n      return this;\n    };\n\n    function RectShape(params) {\n      var def = config.defaults.rect,\n          style = params.style,\n          args = params.args;\n      this.paper.ctx.beginPath();\n      this.paper.ctx.setLineDash(style.borderStyle);\n      this.paper.ctx.fillStyle = style.background ? style.background : def.background;\n      this.paper.ctx.fillRect(args.x, args.y, args.width, args.height || args.width);\n      this.paper.ctx.lineWidth = style.borderSize ? style.borderSize : def.lineWidth;\n      this.paper.ctx.strokeStyle = style.borderColor ? style.borderColor : def.strokeStyle;\n      this.paper.ctx.strokeRect(args.x, args.y, args.width, args.height || args.width);\n      this.paper.ctx.setLineDash([]);\n      this.paper.ctx.closePath();\n    }\n\n    Screen.prototype.rect = RectShape;\n\n    Origami.rect = function () {\n      var args = [].slice.call(arguments);\n      args = argsByRules(args);\n      queue('rect', {\n        style: args.style,\n        args: args\n      });\n      return this;\n    };\n\n    Origami.border = function () {\n      var args = [].slice.call(arguments);\n      args = argsByRules(args);\n      queue('rect', {\n        style: args.style,\n        args: {\n          x: 0,\n          y: 0,\n          width: this.paper.width,\n          height: this.paper.height\n        }\n      });\n      return this;\n    };\n\n    function CSSShape(style) {\n      var self = this,\n          style = config.virtualStyles[style];\n      if (!style) return self; // TODO: Draw in all canvas\n\n      var data = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + self.paper.width + 'px\" height=\"' + self.paper.height + 'px\">' + '<foreignObject width=\"100%\" height=\"100%\">' + '<div xmlns=\"http://www.w3.org/1999/xhtml\">' + '<div style=\"' + style.cssText + '\"></div>' + '</div></foreignObject>' + '</svg>';\n      var DOMURL = window.URL || window.webkitURL || window,\n          img = new Image(),\n          svg = new Blob([data], {\n        type: 'image/svg+xml;charset=utf-8'\n      });\n      var url = DOMURL.createObjectURL(svg);\n      img.src = url;\n      img.addEventListener('load', function () {\n        self.paper.ctx.beginPath();\n        self.paper.ctx.drawImage(img, 0, 0);\n        DOMURL.revokeObjectURL(url);\n        self.paper.ctx.closePath();\n      });\n      return self;\n    }\n\n    Screen.prototype.CSSShape = CSSShape;\n\n    Origami.shape = function (style) {\n      queue('CSSShape', style);\n      return this;\n    };\n\n    function SpriteShape(params) {\n      var properties = params.properties,\n          dw = params.width / properties.frames;\n      drawSprite.call(this, {\n        image: params.image,\n        posX: 0,\n        posY: 0,\n        frame: properties.frames,\n        loop: properties.loop,\n        width: dw,\n        widthTotal: params.width,\n        height: params.height,\n        dx: params.x,\n        dy: params.y,\n        speed: properties.speed,\n        animation: null\n      });\n    }\n\n    function drawSprite(sprite) {\n      var self = this;\n\n      if (sprite.posX === sprite.widthTotal) {\n        if (sprite.loop === false) {\n          window.cancelAnimationFrame(sprite.animation);\n          return;\n        }\n\n        sprite.posX = 0;\n      }\n\n      self.paper.ctx.clearRect(sprite.dx, sprite.dy, sprite.width, sprite.height);\n      self.paper.ctx.beginPath();\n      self.paper.ctx.drawImage(sprite.image, sprite.posX, sprite.posY, sprite.width, sprite.height, sprite.dx, sprite.dy, sprite.width, sprite.height);\n      self.paper.ctx.closePath();\n      sprite.posX = sprite.posX + sprite.width;\n      setTimeout(function () {\n        sprite.animation = window.requestAnimationFrame(drawSprite.bind(self, sprite));\n      }, sprite.speed);\n    }\n\n    Screen.prototype.sprite = SpriteShape;\n\n    Origami.sprite = function (x, y, properties) {\n      var self = this;\n      if (!properties || !properties.src) return this;\n      var image = new Image(),\n          frames = properties.frames || 0,\n          loop = properties.loop || true,\n          speed = properties.speed || 10;\n      image.src = properties.src;\n      var item = {\n        x: x,\n        y: y,\n        image: image,\n        properties: properties,\n        width: 0,\n        height: 0\n      };\n\n      if (image.complete) {\n        item.width = image.naturalWidth;\n        item.height = image.naturalHeight;\n        queue('sprite', item);\n        return self;\n      }\n\n      queue('sprite', item, false);\n      var reference = self.paper.queue.length - 1,\n          currentQueue = config.contexts[this.paper.index].queue[reference];\n      image.addEventListener('load', function () {\n        if (!currentQueue) return false;\n        currentQueue.params.width = image.naturalWidth;\n        currentQueue.params.height = image.naturalHeight;\n        currentQueue.loaded = true;\n      });\n      image.addEventListener('error', function () {\n        if (!currentQueue) return false;\n        currentQueue.failed = true;\n      });\n      return this;\n    };\n\n    function TextShape(params) {\n      var def = config.defaults.text,\n          text = params.text,\n          x = params.x,\n          y = params.y,\n          style = params.style;\n      this.paper.ctx.beginPath();\n      this.paper.ctx.setLineDash(style.borderStyle);\n      this.paper.ctx.lineWidth = style.borderSize ? style.borderSize : def.lineWidth;\n      this.paper.ctx.strokeStyle = style.borderColor ? style.borderColor : def.strokeStyle;\n      this.paper.ctx.font = style.font || def.font;\n      this.paper.ctx.fillStyle = style.color || def.color;\n      this.paper.ctx.textAlign = style.align || def.align;\n      this.paper.ctx.fillText(text, x, y);\n      this.paper.ctx.strokeText(text, x, y);\n      this.paper.ctx.fill();\n      this.paper.ctx.stroke();\n      this.paper.ctx.setLineDash([]);\n      this.paper.ctx.closePath();\n    }\n\n    Screen.prototype.text = TextShape;\n\n    Origami.text = function (text, x, y, style) {\n      style = normalizeStyle(style);\n      var item = {\n        text: text,\n        x: x,\n        y: y,\n        style: style\n      };\n      if (typeof item.x === 'string' && typeof item.y === 'string') item = smartCoordinates(item);\n      queue('text', item);\n      return this;\n    };\n\n    function ChartLine(config) {\n      var ctx = this.paper.ctx,\n          width = this.paper.width,\n          height = this.paper.height;\n      var line = getBorderStyleObject(config.line || \"1px solid #000\");\n      var lineVariance = 2;\n      var xPadding = 40;\n      var yPadding = 40;\n      var data = [];\n      var gridLines = {\n        vertical: true,\n        horizontal: true\n      };\n\n      if (config.gridLines) {\n        if (config.gridLines.vertical === false) gridLines.vertical = false;\n        if (config.gridLines.horizontal === false) gridLines.horizontal = false;\n      }\n\n      for (var i = 0; i < config.labels.length; i++) {\n        data.push({\n          X: config.labels[i],\n          Y: config.data[i]\n        });\n      }\n\n      function getMaxY() {\n        var max = 0;\n\n        for (var i = 0; i < data.length; i++) {\n          if (data[i].Y > max) {\n            max = data[i].Y;\n          }\n        }\n\n        max += 10 - max % 10;\n        return max;\n      }\n\n      function getXPixel(val) {\n        return (width - xPadding) / data.length * val + xPadding;\n      }\n\n      function getYPixel(val) {\n        return height - (height - yPadding) / getMaxY() * val - yPadding;\n      }\n\n      ctx.lineWidth = 0.8;\n      ctx.strokeStyle = '#999';\n      ctx.font = 'normal 12px Helvetica';\n      ctx.fillStyle = '#5e5e5e';\n      ctx.textAlign = \"center\";\n      ctx.beginPath();\n      ctx.moveTo(xPadding, yPadding / lineVariance);\n      ctx.lineTo(xPadding, height - yPadding);\n      ctx.lineTo(width - xPadding / lineVariance, height - yPadding);\n      ctx.stroke(); // Data\n\n      ctx.textAlign = \"right\";\n      ctx.textBaseline = \"middle\";\n\n      for (var i = 0; i < getMaxY(); i += 10) {\n        if (gridLines.horizontal) {\n          ctx.beginPath();\n          ctx.lineWidth = 0.8;\n          ctx.strokeStyle = '#e7e7e7';\n          ctx.moveTo(xPadding - 5, getYPixel(i));\n          ctx.lineTo(width - xPadding / lineVariance, getYPixel(i));\n          ctx.stroke();\n        }\n\n        ctx.fillText(i, xPadding - 10, getYPixel(i));\n      } // Labels\n\n\n      ctx.textAlign = \"left\";\n\n      for (var i = 0; i < data.length; i++) {\n        if (gridLines.vertical) {\n          ctx.beginPath();\n          ctx.lineWidth = 0.8;\n          ctx.strokeStyle = '#e7e7e7';\n          ctx.moveTo(getXPixel(i), height - yPadding + 10);\n          ctx.lineTo(getXPixel(i), yPadding / lineVariance);\n          ctx.stroke();\n        }\n\n        ctx.fillText(data[i].X, getXPixel(i), height - yPadding + 20);\n      }\n\n      ctx.beginPath();\n      ctx.lineWidth = line.borderSize;\n      ctx.setLineDash(line.borderStyle);\n      ctx.strokeStyle = line.borderColor;\n      ctx.moveTo(getXPixel(0), getYPixel(data[0].Y));\n\n      for (var i = 1; i < data.length; i++) {\n        ctx.lineTo(getXPixel(i), getYPixel(data[i].Y));\n      }\n\n      ctx.stroke();\n      ctx.setLineDash([]);\n\n      if (config.points) {\n        ctx.fillStyle = config.pointsColor ? config.pointsColor : 'rgb(75,75,75)';\n\n        for (var i = 0; i < data.length; i++) {\n          ctx.beginPath();\n          ctx.arc(getXPixel(i), getYPixel(data[i].Y), 3, 0, Math.PI * 2, true);\n          ctx.fill();\n        }\n      }\n    }\n\n    Screen.prototype.chartLine = ChartLine;\n\n    Origami.chartLine = function (config) {\n      queue('chartLine', config);\n      return this;\n    }; // Resource.js\n\n\n    Origami.background = function (color) {\n      queue('background', {\n        color: color\n      });\n      return this;\n    };\n\n    Origami.restore = function () {\n      queue('restore');\n      return this;\n    };\n\n    Origami.save = function () {\n      queue('save');\n      return this;\n    };\n\n    Origami.composition = function (globalComposite) {\n      queue('composition', {\n        globalComposite: globalComposite\n      });\n      return this;\n    };\n\n    Origami.translate = function (x, y) {\n      if (x === undefined || x === null) {\n        x = 'reset';\n      }\n\n      if (typeof x === 'string') {\n        if (x === 'center') {\n          x = context.width / 2;\n          y = context.height / 2;\n        }\n\n        if (x === 'reset') {\n          x = -context.width / 2;\n          y = -context.height / 2;\n        }\n      }\n\n      queue('translate', {\n        x: x,\n        y: y\n      });\n      return this;\n    };\n\n    Origami.rotate = function (degrees) {\n      if (typeof degrees === 'undefined') degrees = 'slow';\n\n      if (typeof degrees === 'string') {\n        // Slow\n        if (degrees === 'slow') degrees = 2 * Math.PI / 60 * new Date().getSeconds() + 2 * Math.PI / 60000 * new Date().getMilliseconds(); // Normal\n        else if (degrees === 'normal') degrees = 2 * Math.PI / 30 * new Date().getSeconds() + 2 * Math.PI / 30000 * new Date().getMilliseconds(); // Fast\n        else if (degrees === 'fast') degrees = 2 * Math.PI / 6 * new Date().getSeconds() + 2 * Math.PI / 6000 * new Date().getMilliseconds();\n      }\n\n      queue('rotate', {\n        degrees: degrees\n      });\n      return this;\n    };\n\n    Origami.stopRender = function () {\n      window.cancelAnimationFrame(this.paper.frame);\n      this.paper.frame = false;\n    };\n\n    Origami.play = function () {\n      this.paper.frame = 1;\n      return this;\n    };\n\n    Origami.startRender = function (fn) {\n      var self = this;\n      if (self.paper.frame === false) return;\n      self.draw(function () {\n        self.paper.frame = window.requestAnimationFrame(fn.bind(this));\n      });\n    };\n\n    Origami.scale = function (width, height) {\n      queue('scale', {\n        width: width,\n        height: height\n      });\n      return this;\n    };\n\n    Origami.flip = function (type) {\n      queue('flip', {\n        type: type\n      });\n      return this;\n    };\n\n    Origami.flipEnd = function () {\n      queue('flipEnd');\n      return this;\n    };\n\n    Origami.clear = function () {\n      queue('clear');\n      return this;\n    };\n\n    Origami.on = function (ev, fn) {\n      this.paper.element.addEventListener(ev, fn);\n      return this;\n    };\n\n    var factory = extend(Origami.init.bind(this), Origami); // For consistency with CommonJS environments' exports\n\n    if (module && module.exports) {\n      module.exports = factory;\n    } // For CommonJS with exports, but without module.exports, like Rhino\n    else if (exports) {\n      exports.origami = factory;\n    } // For browser, export only select globals\n    else if (typeof window === \"object\") {\n      window.origami = extend(Origami.init.bind(Origami), Origami);\n    } // Get a reference to the global object\n\n  })(function () {\n    return this;\n  }());\n});\nvar origami_2 = origami_1.origami;\n\nvar drawRoundLayers = functionContext => {\n  let {\n    data,\n    options,\n    ctx,\n    h,\n    w,\n    Helper,\n    canvasId\n  } = functionContext;\n  let helper = new Helper(ctx);\n  let origamiContext = {};\n  let origami = origami_1.bind(origamiContext);\n  origami(ctx).rect(10, 10, 40, 40).draw();\n}; //options:type,colors,stroke\n\n\nfunction visualize(data, canvasId) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let frame = arguments.length > 3 ? arguments[3] : undefined;\n  //make a clone of options\n  options = { ...options\n  }; //options\n\n  if (!options.stroke) options.stroke = 1;\n  if (!options.colors) options.colors = [\"#d92027\", \"#ff9234\", \"#ffcd3c\", \"#35d0ba\"];\n  let canvas = document.getElementById(canvasId);\n  if (!canvas) return;\n  let ctx = canvas.getContext(\"2d\");\n  let h = canvas.height;\n  let w = canvas.width;\n  ctx.strokeStyle = options.colors[0];\n  ctx.lineWidth = options.stroke;\n  let typeMap = {\n    \"bars\": drawBars,\n    \"bars blocks\": drawBarsBlocks,\n    \"big bars\": drawBigBars,\n    \"cubes\": drawCubes,\n    \"dualbars\": drawDualbars,\n    \"dualbars blocks\": drawDualbarsBlocks,\n    \"fireworks\": drawFireworks,\n    \"flower\": drawFlower,\n    \"flower blocks\": drawFlowerBlocks,\n    \"orbs\": drawOrbs,\n    \"ring\": drawRing,\n    \"rings\": drawRings,\n    \"round layers\": drawRoundLayers,\n    \"round wave\": drawRoundWave,\n    \"shine\": drawShine,\n    \"shine rings\": drawShineRings,\n    \"shockwave\": drawShockwave,\n    \"star\": drawStar,\n    \"static\": drawStatic,\n    \"stitches\": drawStitches,\n    \"wave\": drawWave,\n    \"web\": drawWeb\n  };\n  let frameRateMap = {\n    \"bars\": 1,\n    \"bars blocks\": 1,\n    \"big bars\": 1,\n    \"cubes\": 1,\n    \"dualbars\": 1,\n    \"dualbars blocks\": 1,\n    \"fireworks\": 1,\n    \"flower\": 1,\n    \"flower blocks\": 1,\n    \"ring\": 1,\n    \"rings\": 1,\n    \"round layers\": 1,\n    \"round wave\": 1,\n    \"orbs\": 1,\n    \"shine\": 1,\n    \"shine rings\": 1,\n    \"shockwave\": 1,\n    \"star\": 1,\n    \"static\": 1,\n    \"stitches\": 1,\n    \"wave\": 1,\n    \"web\": 1\n  };\n  const functionContext = {\n    data,\n    options,\n    ctx,\n    h,\n    w,\n    Helper: this.Helper,\n    canvasId\n  };\n  if (typeof options.type == \"string\") options.type = [options.type];\n  options.type.forEach(type => {\n    //abide by the frame rate\n    if (frame % frameRateMap[type] === 0) {\n      //clear canvas\n      ctx.clearRect(0, 0, w, h);\n      ctx.beginPath();\n      typeMap[type](functionContext);\n    }\n  });\n}\n\nfunction Helper(ctx) {\n  this.ctx = ctx;\n  this.mainColor = \"black\";\n}\n\nHelper.prototype = {\n  __toRadians__(degree) {\n    return degree * Math.PI / 180;\n  },\n\n  __rotatePoint__(_ref, _ref2, degree) {\n    let [pointX, pointY] = _ref;\n    let [originX, originY] = _ref2;\n\n    //clockwise\n    let angle = this.__toRadians__(degree);\n\n    let rotatedX = Math.cos(angle) * (pointX - originX) - Math.sin(angle) * (pointY - originY) + originX;\n    let rotatedY = Math.sin(angle) * (pointX - originX) + Math.cos(angle) * (pointY - originY) + originY;\n    return [rotatedX, rotatedY];\n  },\n\n  mutateData(data, type) {\n    let extra = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    if (type === \"mirror\") {\n      let rtn = [];\n\n      for (let i = 0; i < data.length; i += 2) {\n        rtn.push(data[i]);\n      }\n\n      rtn = [...rtn, ...rtn.reverse()];\n      return rtn;\n    }\n\n    if (type === \"shrink\") {\n      //resize array by % of current array \n      if (extra < 1) {\n        extra = data.length * extra;\n      }\n\n      let rtn = [];\n      let splitAt = Math.floor(data.length / extra);\n\n      for (let i = 1; i <= extra; i++) {\n        let arraySection = data.slice(i * splitAt, i * splitAt + splitAt);\n        let middle = arraySection[Math.floor(arraySection.length / 2)];\n        rtn.push(middle);\n      }\n\n      return rtn;\n    }\n\n    if (type === \"split\") {\n      let size = Math.floor(data.length / extra);\n      let rtn = [];\n      let temp = [];\n      let track = 0;\n\n      for (let i = 0; i <= size * extra; i++) {\n        if (track === size) {\n          rtn.push(temp);\n          temp = [];\n          track = 0;\n        }\n\n        temp.push(data[i]);\n        track++;\n      }\n\n      return rtn;\n    }\n\n    if (type === \"scale\") {\n      let scalePercent = extra / 255;\n      if (extra <= 3 && extra >= 0) scalePercent = extra;\n      let rtn = data.map(value => value * scalePercent);\n      return rtn;\n    }\n\n    if (type === \"organize\") {\n      let rtn = {};\n      rtn.base = data.slice(60, 120);\n      rtn.vocals = data.slice(120, 255);\n      rtn.mids = data.slice(255, 2000);\n      return rtn;\n    }\n\n    if (type === \"reverb\") {\n      let rtn = [];\n      data.forEach((val, i) => {\n        rtn.push(val - (data[i + 1] || 0));\n      });\n      return rtn;\n    }\n\n    if (type === \"amp\") {\n      let rtn = [];\n      data.forEach(val => {\n        rtn.push(val * (extra + 1));\n      });\n      return rtn;\n    }\n\n    if (type === \"min\") {\n      let rtn = [];\n      data.forEach(value => {\n        if (value < extra) value = extra;\n        rtn.push(value);\n      });\n      return rtn;\n    }\n  },\n\n  getPoints(shape, size, _ref3, pointCount, endPoints) {\n    let [originX, originY] = _ref3;\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    let {\n      offset = 0,\n      rotate = 0,\n      customOrigin = []\n    } = options;\n    let rtn = {\n      start: [],\n      end: []\n    };\n\n    if (shape === \"circle\") {\n      let degreePerPoint = 360 / pointCount;\n\n      let radianPerPoint = this.__toRadians__(degreePerPoint);\n\n      let radius = size / 2;\n\n      for (let i = 1; i <= pointCount; i++) {\n        let currentRadian = radianPerPoint * i;\n        let currentEndPoint = endPoints[i - 1];\n        let pointOffset = endPoints[i - 1] * (offset / 100);\n        let x = originX + (radius - pointOffset) * Math.cos(currentRadian);\n        let y = originY + (radius - pointOffset) * Math.sin(currentRadian);\n\n        let point1 = this.__rotatePoint__([x, y], [originX, originY], rotate);\n\n        rtn.start.push(point1);\n        x = originX + (radius - pointOffset + currentEndPoint) * Math.cos(currentRadian);\n        y = originY + (radius - pointOffset + currentEndPoint) * Math.sin(currentRadian);\n\n        let point2 = this.__rotatePoint__([x, y], [originX, originY], rotate);\n\n        rtn.end.push(point2);\n      }\n\n      return rtn;\n    }\n\n    if (shape === \"line\") {\n      let increment = size / pointCount;\n      originX = customOrigin[0] || originX;\n      originY = customOrigin[1] || originY;\n\n      for (let i = 0; i <= pointCount; i++) {\n        let degree = rotate;\n        let pointOffset = endPoints[i] * (offset / 100);\n\n        let startingPoint = this.__rotatePoint__([originX + i * increment, originY - pointOffset], [originX, originY], degree);\n\n        rtn.start.push(startingPoint);\n\n        let endingPoint = this.__rotatePoint__([originX + i * increment, originY + endPoints[i] - pointOffset], [originX, originY], degree);\n\n        rtn.end.push(endingPoint);\n      }\n\n      return rtn;\n    }\n  },\n\n  drawCircle(_ref4, diameter) {\n    let [x, y] = _ref4;\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let {\n      color,\n      lineColor = this.ctx.strokeStyle\n    } = options;\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, diameter / 2, 0, 2 * Math.PI);\n    this.ctx.strokeStyle = lineColor;\n    this.ctx.stroke();\n    this.ctx.fillStyle = color;\n    if (color) this.ctx.fill();\n  },\n\n  drawOval(_ref5, height, width) {\n    let [x, y] = _ref5;\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let {\n      rotation = 0,\n      color,\n      lineColor = this.ctx.strokeStyle\n    } = options;\n    if (rotation) rotation = this.__toRadians__(rotation);\n    this.ctx.beginPath();\n    this.ctx.ellipse(x, y, width, height, rotation, 0, 2 * Math.PI);\n    this.ctx.strokeStyle = lineColor;\n    this.ctx.stroke();\n    this.ctx.fillStyle = color;\n    if (color) this.ctx.fill();\n  },\n\n  drawSquare(_ref6, diameter) {\n    let [x, y] = _ref6;\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.drawRectangle([x, y], diameter, diameter, options);\n  },\n\n  drawRectangle(_ref7, height, width) {\n    let [x, y] = _ref7;\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let {\n      color,\n      lineColor = this.ctx.strokeStyle,\n      radius = 0,\n      rotate = 0\n    } = options; // if (width < 2 * radius) radius = width / 2;\n    // if (height < 2 * radius) radius = height / 2;\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(x + radius, y);\n\n    let p1 = this.__rotatePoint__([x + width, y], [x, y], rotate);\n\n    let p2 = this.__rotatePoint__([x + width, y + height], [x, y], rotate);\n\n    this.ctx.arcTo(p1[0], p1[1], p2[0], p2[1], radius);\n\n    let p3 = this.__rotatePoint__([x + width, y + height], [x, y], rotate);\n\n    let p4 = this.__rotatePoint__([x, y + height], [x, y], rotate);\n\n    this.ctx.arcTo(p3[0], p3[1], p4[0], p4[1], radius);\n\n    let p5 = this.__rotatePoint__([x, y + height], [x, y], rotate);\n\n    let p6 = this.__rotatePoint__([x, y], [x, y], rotate);\n\n    this.ctx.arcTo(p5[0], p5[1], p6[0], p6[1], radius);\n\n    let p7 = this.__rotatePoint__([x, y], [x, y], rotate);\n\n    let p8 = this.__rotatePoint__([x + width, y], [x, y], rotate);\n\n    this.ctx.arcTo(p7[0], p7[1], p8[0], p8[1], radius);\n    this.ctx.closePath();\n    this.ctx.strokeStyle = lineColor;\n    this.ctx.stroke();\n    this.ctx.fillStyle = color;\n    if (color) this.ctx.fill();\n  },\n\n  drawLine(_ref8, _ref9) {\n    let [fromX, fromY] = _ref8;\n    let [toX, toY] = _ref9;\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let {\n      lineColor = this.ctx.strokeStyle\n    } = options;\n    this.ctx.beginPath();\n    this.ctx.moveTo(fromX, fromY);\n    this.ctx.lineTo(toX, toY);\n    this.ctx.strokeStyle = lineColor;\n    this.ctx.stroke();\n  },\n\n  drawPolygon(points) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let {\n      color,\n      lineColor = this.ctx.strokeStyle,\n      radius = 0,\n      close = false\n    } = options;\n\n    function getRoundedPoint(x1, y1, x2, y2, radius, first) {\n      let total = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n      let idx = first ? radius / total : (total - radius) / total;\n      return [x1 + idx * (x2 - x1), y1 + idx * (y2 - y1)];\n    }\n\n    function getRoundedPoints(pts, radius) {\n      let len = pts.length;\n      let res = new Array(len);\n\n      for (let i2 = 0; i2 < len; i2++) {\n        let i1 = i2 - 1;\n        let i3 = i2 + 1;\n        if (i1 < 0) i1 = len - 1;\n        if (i3 == len) i3 = 0;\n        let p1 = pts[i1];\n        let p2 = pts[i2];\n        let p3 = pts[i3];\n        let prevPt = getRoundedPoint(p1[0], p1[1], p2[0], p2[1], radius, false);\n        let nextPt = getRoundedPoint(p2[0], p2[1], p3[0], p3[1], radius, true);\n        res[i2] = [prevPt[0], prevPt[1], p2[0], p2[1], nextPt[0], nextPt[1]];\n      }\n\n      return res;\n    }\n\n    if (radius > 0) {\n      points = getRoundedPoints(points, radius);\n    }\n\n    let i,\n        pt,\n        len = points.length;\n\n    for (i = 0; i < len; i++) {\n      pt = points[i];\n\n      if (i == 0) {\n        this.ctx.beginPath();\n        this.ctx.moveTo(pt[0], pt[1]);\n      } else {\n        this.ctx.lineTo(pt[0], pt[1]);\n      }\n\n      if (radius > 0) {\n        this.ctx.quadraticCurveTo(pt[2], pt[3], pt[4], pt[5]);\n      }\n    }\n\n    if (close) this.ctx.closePath();\n    this.ctx.strokeStyle = lineColor;\n    this.ctx.stroke();\n    this.ctx.fillStyle = color;\n    if (color) this.ctx.fill();\n  }\n\n};\n\nfunction Wave() {\n  this.current_stream = {};\n  this.sources = {};\n  this.onFileLoad = null;\n  this.activeElements = {};\n  this.activated = false;\n  window.AudioContext = window.AudioContext || window.webkitAudioContext;\n}\n\nWave.prototype = {\n  fromElement,\n  fromFile,\n  ...fromStream$1,\n  visualize,\n  Helper\n};\nmodule.exports = Wave;","map":{"version":3,"sources":["/Users/luna.c/Documents/CodeWork/todo-app/node_modules/@foobar404/wave/dist/bundle.cjs.js"],"names":["fromElement","element_id","canvas_id","options","globalAccessKey","initGlobalObject","elementId","window","getGlobal","accessKey","setGlobal","value","returnValue","waveContext","element","document","getElementById","crossOrigin","run","activated","activeCanvas","JSON","stringify","activeElements","count","currentCount","audioCtx","id","AudioContext","analyser","createAnalyser","source","mediaElement","createMediaElementSource","oscillator","createOscillator","frequency","connect","destination","start","stop","fftsize","bufferLength","frequencyBinCount","data","Uint8Array","frameCount","renderFrame","requestAnimationFrame","getByteFrequencyData","visualize","bind","create","forEach","event","removeEventListener","once","call","body","addEventListener","fromFile","file","stroke","audio","Audio","src","fftSize","file_data","temp_data","getWave","fdi","self","duration","Infinity","Promise","r","setTimeout","currentTime","Math","random","play","onplay","findSize","size","range","power","d","playbackRate","drawRate","setInterval","onended","undefined","clearInterval","canvas","createElement","height","innerHeight","width","innerWidth","image","toDataURL","onFileLoad","remove","fromStream","stream","current_stream","sources","toString","createMediaStreamSource","cancelAnimationFrame","animation","loop","stopStream","playStream","fromStream$1","drawWave","functionContext","ctx","h","w","Helper","colors","helper","mutateData","points","getPoints","length","offset","slice","end","push","drawPolygon","lineColor","color","radius","drawShine","cx","cy","percent","point_count","increase","PI","point","p","a","sx","cos","sy","sin","moveTo","dx","dy","lineTo","arc","fillStyle","fill","drawRing","fa","fx","fy","q","x","y","drawBars","breakpoint","floor","i","strokeStyle","beginPath","drawDualbars","min","mid","drawOrbs","mids","drawLine","drawCircle","drawFlower","drawFlowerBlocks","ax","ay","bx","by","ex","ey","drawBarsBlocks","rect","drawDualbarsBlocks","drawStar","top","bottom","t","closePath","b","drawRoundWave","drawRings","minDimension","vocals","outerCircle","innerCircle","close","middle","largerInner","innerBars","drawShineRings","base","outerBars","innerWave","thinLine","drawCubes","spacing","squareSize","colorIndex","squareCount","ceil","totalSquares","colorStop","j","origin","drawSquare","drawBigBars","drawRectangle","drawShockwave","wavePoints","invertedPoints","drawFireworks","rotate","drawStatic","prevPoint","drawWeb","dataCopy","drawStitches","commonjsGlobal","globalThis","global","createCommonjsModule","fn","module","exports","origami_1","Origami","paper","config","documentStyles","virtualStyles","contexts","defaults","background","lineWidth","polygon","line","text","font","prefix","warning","message","obj","console","warn","error","Error","concat","init","el","querySelector","existentContext","exists","getContext","clientWidth","clientHeight","context","current","queue","index","flip","frame","styles","defineDocumentStyles","selectors","arguments","style","styleRuleValueFrom","getPaper","canvasCtx","getContexts","cleanContexts","createComponent","component","props","draw","customRender","origami","abs","Screen","queueList","loaded","failed","params","assign","load","mOrigami","clone","loadInterval","dataLoad","filter","item","Queue","hasOwn","Object","prototype","hasOwnProperty","arr","isEqualNode","argsByRules","argsArray","rules","args","shift","normalizeStyle","smartCoordinates","getBorderStyleObject","prop","border","borderSize","borderColor","borderStyle","borderString","match","replace","elmWidth","elmHeight","axis","indexOf","substr","parseInt","styleSheets","mysheet","myrules","cssRules","extend","undefOnly","selector","documentStyleRules","selectorText","toLowerCase","copy","constructor","attr","currentContext","translate","backgroundColor","restore","save","composition","globalCompositeOperation","globalComposite","degrees","scale","type","flipEnd","clear","clearRect","ArcShape","def","setLineDash","sAngle","eAngle","bg","ImageShape","drawImage","img","Image","complete","naturalWidth","naturalHeight","reference","currentQueue","LineShape","pointA","pointB","PolygonShape","settedArgs","RectShape","fillRect","strokeRect","CSSShape","cssText","DOMURL","URL","webkitURL","svg","Blob","url","createObjectURL","revokeObjectURL","shape","SpriteShape","properties","dw","frames","drawSprite","posX","posY","widthTotal","speed","sprite","TextShape","textAlign","align","fillText","strokeText","ChartLine","lineVariance","xPadding","yPadding","gridLines","vertical","horizontal","labels","X","Y","getMaxY","max","getXPixel","val","getYPixel","textBaseline","pointsColor","chartLine","Date","getSeconds","getMilliseconds","stopRender","startRender","on","ev","factory","origami_2","drawRoundLayers","canvasId","origamiContext","typeMap","frameRateMap","mainColor","__toRadians__","degree","__rotatePoint__","pointX","pointY","originX","originY","angle","rotatedX","rotatedY","extra","rtn","reverse","splitAt","arraySection","temp","track","scalePercent","map","pointCount","endPoints","customOrigin","degreePerPoint","radianPerPoint","currentRadian","currentEndPoint","pointOffset","point1","point2","increment","startingPoint","endingPoint","diameter","drawOval","rotation","ellipse","p1","p2","arcTo","p3","p4","p5","p6","p7","p8","fromX","fromY","toX","toY","getRoundedPoint","x1","y1","x2","y2","first","total","sqrt","idx","getRoundedPoints","pts","len","res","Array","i2","i1","i3","prevPt","nextPt","pt","quadraticCurveTo","Wave","webkitAudioContext"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction fromElement(element_id, canvas_id, options) {\n    const globalAccessKey = [options.globalAccessKey || '$wave'];\n    const initGlobalObject = (elementId) => {\n        window[globalAccessKey] = window[globalAccessKey] || {};\n        window[globalAccessKey][elementId] = window[globalAccessKey][elementId] || {};\n    };\n\n    const getGlobal = options['getGlobal'] || function(elementId, accessKey) {\n        initGlobalObject(elementId);\n        return window[globalAccessKey][elementId][accessKey];\n    };\n\n    const setGlobal = options['setGlobal'] || function(elementId, accessKey, value) {\n        let returnValue = getGlobal(elementId);\n        if(!returnValue) {\n            window[globalAccessKey][elementId][accessKey] = window[globalAccessKey][elementId][accessKey] || value;\n            returnValue = window[globalAccessKey][elementId][accessKey];\n        }\n        return returnValue;\n    };\n\n    const waveContext = this;\n    let element = document.getElementById(element_id);\n    if (!element) return\n    element.crossOrigin = \"anonymous\";\n\n    function run() {\n        //user gesture has happened\n        this.activated = true;\n\n        //track current wave for canvas\n        this.activeCanvas = this.activeCanvas || {};\n        this.activeCanvas[canvas_id] = JSON.stringify(options);\n\n        //track elements used so multiple elements use the same data\n        this.activeElements[element_id] = this.activeElements[element_id] || {};\n        if (this.activeElements[element_id].count) this.activeElements[element_id].count += 1;\n        else this.activeElements[element_id].count = 1;\n\n        const currentCount = this.activeElements[element_id].count;\n\n        const audioCtx = setGlobal(element.id, 'audioCtx', new AudioContext());\n        const analyser = setGlobal(element.id, 'analyser', audioCtx.createAnalyser());\n\n        let source = getGlobal(element.id, 'source');\n        if (source) {\n            if (source.mediaElement !== element) {\n                source = audioCtx.createMediaElementSource(element);\n            }\n        } else {\n            source = audioCtx.createMediaElementSource(element);\n        }\n        setGlobal(element.id, 'source', source);\n\n        //beep test for ios\n        const oscillator = audioCtx.createOscillator();\n        oscillator.frequency.value = 1;\n        oscillator.connect(audioCtx.destination);\n        oscillator.start(0);\n        oscillator.stop(0);\n\n        source.connect(analyser);\n        source.connect(audioCtx.destination);\n\n        analyser.fftsize = 32768;\n        const bufferLength = analyser.frequencyBinCount;\n        const data = new Uint8Array(bufferLength);\n        let frameCount = 1;\n\n        function renderFrame() {\n            //only run one wave visual per canvas\n            if (JSON.stringify(options) !== this.activeCanvas[canvas_id]) {\n                return\n            }\n\n            //if the element or canvas go out of scope, stop animation\n            if (!document.getElementById(element_id) || !document.getElementById(canvas_id))\n                return\n\n            requestAnimationFrame(renderFrame);\n            frameCount++;\n\n            //check if this element is the last to be called \n            if (!(currentCount < this.activeElements[element_id].count)) {\n                analyser.getByteFrequencyData(data);\n                this.activeElements[element_id].data = data;\n            }\n\n            this.visualize(this.activeElements[element_id].data, canvas_id, options, frameCount);\n        }\n\n        renderFrame = renderFrame.bind(this);\n        renderFrame();\n\n    }\n\n\n    const create = () => {\n        //remove all events\n        [\"touchstart\", \"touchmove\", \"touchend\", \"mouseup\", \"click\", \"play\"].forEach(event => {\n            element.removeEventListener(event, create, { once: true });\n        });\n\n        run.call(waveContext);\n    };\n\n    if (this.activated || options['skipUserEventsWatcher']) {\n        run.call(waveContext);\n    } else {\n        //wait for a valid user gesture \n        document.body.addEventListener(\"touchstart\", create, { once: true });\n        document.body.addEventListener(\"touchmove\", create, { once: true });\n        document.body.addEventListener(\"touchend\", create, { once: true });\n        document.body.addEventListener(\"mouseup\", create, { once: true });\n        document.body.addEventListener(\"click\", create, { once: true });\n        element.addEventListener(\"play\", create, { once: true });\n    }\n\n\n\n}\n\nfunction fromFile(file, options = {}) {\n    //options\n    if (!options.stroke) options.stroke = 10;\n\n    let audio = new Audio();\n    audio.src = file;\n\n    let audioCtx = new AudioContext();\n    let analyser = audioCtx.createAnalyser();\n\n    let source = audioCtx.createMediaElementSource(audio);\n    source.connect(analyser);\n\n    analyser.fftSize = 64;\n    let bufferLength = analyser.frequencyBinCount;\n\n    let file_data;\n    let temp_data = new Uint8Array(bufferLength);\n    let getWave;\n    let fdi = 0;\n    let self = this;\n\n    audio.addEventListener('loadedmetadata', async function () {\n\n        while (audio.duration === Infinity) {\n            await new Promise(r => setTimeout(r, 1000));\n            audio.currentTime = 10000000 * Math.random();\n        }\n\n        audio.currentTime = 0;\n        audio.play();\n    });\n\n    audio.onplay = function () {\n        let findSize = (size) => {\n\n            for (let range = 1; range <= 40; range++) {\n                let power = 2 ** range;\n\n                if (size <= power) return power;\n            }\n\n        };\n        let d = audio.duration;\n        audio.playbackRate = 16;\n\n        d = d / audio.playbackRate;\n\n        let drawRate = 20; //ms\n\n        let size = ((d / (drawRate / 1000)) * (analyser.fftSize / 2));\n        size = findSize(size);\n        file_data = new Uint8Array(size);\n\n\n        getWave = setInterval(function () {\n            analyser.getByteFrequencyData(temp_data);\n\n            for (let data in temp_data) {\n                data = temp_data[data];\n                file_data[fdi] = data;\n                fdi++;\n            }\n\n        }, drawRate);\n\n\n    };\n\n    audio.onended = function () {\n\n        if (audio.currentTime === audio.duration && file_data !== undefined) {\n\n            clearInterval(getWave);\n\n            let canvas = document.createElement(\"canvas\");\n            canvas.height = window.innerHeight;\n            canvas.width = window.innerWidth;\n\n            self.visualize(file_data, canvas, options);\n            let image = canvas.toDataURL(\"image/jpg\");\n            self.onFileLoad(image);\n\n            canvas.remove();\n        }\n\n    };\n\n}\n\nfunction fromStream(stream, canvas_id, options = {}) {\n\n    this.current_stream.id = canvas_id;\n    this.current_stream.options = options;\n\n    let audioCtx, analyser, source;\n    if (!this.sources[stream.toString()]) {\n        audioCtx = new AudioContext();\n        analyser = audioCtx.createAnalyser();\n\n        source = audioCtx.createMediaStreamSource(stream);\n        source.connect(analyser);\n        source.connect(audioCtx.destination); //playback audio\n\n        this.sources[stream.toString()] = {\n            \"audioCtx\": audioCtx,\n            \"analyser\": analyser,\n            \"source\": source\n        };\n    } else {\n        cancelAnimationFrame(this.sources[stream.toString()].animation);\n        audioCtx = this.sources[stream.toString()].audioCtx;\n        analyser = this.sources[stream.toString()].analyser;\n        source = this.sources[stream.toString()].source;\n    }\n\n    analyser.fftsize = 32768;\n    let bufferLength = analyser.frequencyBinCount;\n    this.current_stream.data = new Uint8Array(bufferLength);\n\n    let self = this;\n\n    function renderFrame() {\n        self.current_stream.animation = requestAnimationFrame(self.current_stream.loop);\n        self.sources[stream.toString()].animation = self.current_stream.animation;\n        analyser.getByteFrequencyData(self.current_stream.data);\n\n        self.visualize(self.current_stream.data, self.current_stream.id, self.current_stream.options);\n    }\n\n    this.current_stream.loop = renderFrame;\n    renderFrame();\n\n}\n\nfunction stopStream() {\n    cancelAnimationFrame(this.current_stream.animation);\n}\n\nfunction playStream() {\n    this.current_stream.loop();\n}\n\nvar fromStream$1 = {\n    fromStream,\n    stopStream,\n    playStream\n};\n\nvar drawWave = (functionContext) => {\n    let { data, options, ctx, h, w, Helper } = functionContext;\n    let { colors } = options;\n    const helper = new Helper(ctx);\n\n    // data = helper.mutateData(data, \"shrink\", 200)\n    data = helper.mutateData(data, \"split\", 4)[0];\n    data = helper.mutateData(data, \"scale\", h);\n\n    let points = helper.getPoints(\"line\", w, [0, h], data.length, data, { offset: 100 });\n    points.start = points.start.slice(0, points.end.length - 1);\n    points.start.push([w, h]);\n    points.start.push([0, h]);\n\n    helper.drawPolygon(points.start, { lineColor: colors[0], color: colors[1], radius: (h * .008) });\n\n\n};\n\nvar drawShine = (functionContext) => {\n    let { data, options, ctx, h, w } = functionContext;\n\n    let cx = w / 2;\n    let cy = h / 2;\n    let r = h / 4;\n    let percent = (h / 2 - r) / 255;\n    let point_count = 512;\n    let increase = (360 / point_count) * Math.PI / 180;\n\n    for (let point = 1; point <= point_count; point++) {\n        let p = data[600 % point]; //get value\n        p *= percent;\n        point++; //start at 1\n        let a = point * increase;\n\n        let sx = cx + r * Math.cos(a);\n        let sy = cy + r * Math.sin(a);\n        ctx.moveTo(sx, sy);\n\n        let dx = cx + (r + p) * Math.cos(a);\n        let dy = cy + (r + p) * Math.sin(a);\n        ctx.lineTo(dx, dy);\n\n    }\n    ctx.stroke();\n\n    if (options.colors[1]) {\n        ctx.arc(cx, cy, r * .90, 0, 2 * Math.PI);\n        ctx.fillStyle = options.colors[1];\n        ctx.fill();\n    }\n};\n\nvar drawRing = (functionContext) => {\n    let { data, options, ctx, h, w } = functionContext;\n\n    let cx = w / 2;\n    let cy = h / 2;\n    let r = (h - 10) / 2;\n    let offset = r / 5;\n    let percent = (r - offset) / 255;\n    let point_count = 150;\n    let increase = (360 / point_count) * Math.PI / 180;\n\n    ctx.arc(cx, cy, r, 0, 2 * Math.PI, true);\n\n    let fa = 0;\n    let fx = cx + (r - (data[0] * percent)) * Math.cos(fa);\n    let fy = cy + (r - (data[0] * percent)) * Math.sin(fa);\n    ctx.moveTo(fx, fy);\n\n    let q = 0;\n    for (let point = 0; point < point_count; point++) {\n        q += 1;\n        if (point >= point_count / 2) {\n            q -= 2;\n        }\n\n        let p = data[q]; //get value\n        p *= percent;\n\n        let a = point * increase;\n        let x = cx + (r - p) * Math.cos(a);\n        let y = cy + (r - p) * Math.sin(a);\n\n        ctx.lineTo(x, y);\n        ctx.arc(x, y, 2, 0, 2 * Math.PI);\n\n    }\n    ctx.lineTo(fx, fy);\n\n    ctx.stroke();\n    ctx.fillStyle = options.colors[1] || \"#fff0\";\n    ctx.fill();\n};\n\nvar drawBars = (functionContext) => {\n    let { data, options, ctx, h, w } = functionContext;\n\n    let point_count = 64;\n    let percent = h / 255;\n    let increase = w / 64;\n    let breakpoint = Math.floor(point_count / options.colors.length);\n\n    for (let point = 1; point <= point_count; point++) {\n        let p = data[point]; //get value\n        p *= percent;\n\n        let x = increase * point;\n\n        ctx.moveTo(x, h);\n        ctx.lineTo(x, h - p);\n\n        if (point % breakpoint === 0) {\n            let i = (point / breakpoint) - 1;\n            ctx.strokeStyle = options.colors[i];\n            ctx.stroke();\n            ctx.beginPath();\n        }\n\n    }\n};\n\nvar drawDualbars = (functionContext) => {\n    let { data, options, ctx, h, w } = functionContext;\n\n    let percent = h / 255;\n    let increase = w / 128;\n    let point_count = 128;\n    let min = 5;\n    let breakpoint = Math.floor(point_count / options.colors.length);\n\n    for (let point = 1; point <= point_count; point++) {\n        let p = data[point]; //get value\n        p += min;\n        p *= percent;\n\n        let x = increase * point;\n\n        let mid = (h / 2) + (p / 2);\n\n        ctx.moveTo(x, mid);\n        ctx.lineTo(x, mid - p);\n\n        if (point % breakpoint === 0) {\n            let i = (point / breakpoint) - 1;\n            ctx.strokeStyle = options.colors[i];\n            ctx.stroke();\n            ctx.beginPath();\n        }\n\n    }\n};\n\nvar drawOrbs = (functionContext) => {\n    let { data, options, ctx, h, w, Helper } = functionContext;\n    let { colors } = options;\n    const helper = new Helper(ctx);\n\n    data = helper.mutateData(data, \"organize\").mids;\n    data = helper.mutateData(data, \"split\", 2)[0];\n    data = helper.mutateData(data, \"shrink\", 100);\n    data = helper.mutateData(data, \"mirror\");\n    data = helper.mutateData(data, \"scale\", h);\n    data = helper.mutateData(data, \"amp\", .75);\n\n    let points = helper.getPoints(\"line\", w, [0, h / 2], data.length, data, { offset: 50 });\n    points.start.forEach((start, i) => {\n        helper.drawLine(start, points.end[i], { lineColor: colors[0] });\n\n        helper.drawCircle(start, h * .01, { color: colors[1] || colors[0] });\n        helper.drawCircle(points.end[i], h * .01, { color: colors[1] || colors[0] });\n    });\n};\n\nvar drawFlower = (functionContext) => {\n    let { data, options, ctx, h, w } = functionContext;\n\n    let min = 5;\n    let r = h / 4;\n    let offset = r / 2;\n    let cx = w / 2;\n    let cy = h / 2;\n    let point_count = 128;\n    let percent = (r - offset) / 255;\n    let increase = (360 / point_count) * Math.PI / 180;\n    let breakpoint = Math.floor(point_count / options.colors.length);\n\n    for (let point = 1; point <= point_count; point++) {\n        let p = (data[point] + min) * percent;\n        let a = point * increase;\n\n        let sx = cx + (r - (p - offset)) * Math.cos(a);\n        let sy = cy + (r - (p - offset)) * Math.sin(a);\n        ctx.moveTo(sx, sy);\n\n        let dx = cx + (r + p) * Math.cos(a);\n        let dy = cy + (r + p) * Math.sin(a);\n        ctx.lineTo(dx, dy);\n\n        if (point % breakpoint === 0) {\n            let i = (point / breakpoint) - 1;\n            ctx.strokeStyle = options.colors[i];\n            ctx.stroke();\n            ctx.beginPath();\n        }\n    }\n\n    ctx.stroke();\n};\n\nvar drawFlowerBlocks = (functionContext) => {\n    let { data, options, ctx, h, w } = functionContext;\n    let r = h / 4;\n    let cx = w / 2;\n    let cy = h / 2;\n    let point_count = 56;\n    let percent = r / 255;\n    let increase = (360 / point_count) * Math.PI / 180;\n\n    for (let point = 1; point <= point_count; point++) {\n        let p = (data[point]) * percent;\n        let a = point * increase;\n\n        let ax = cx + (r - (p / 2)) * Math.cos(a);\n        let ay = cy + (r - (p / 2)) * Math.sin(a);\n        ctx.moveTo(ax, ay);\n\n        let bx = cx + (r + p) * Math.cos(a);\n        let by = cy + (r + p) * Math.sin(a);\n        ctx.lineTo(bx, by);\n\n        let dx = cx + (r + p) * Math.cos(a + increase);\n        let dy = cy + (r + p) * Math.sin(a + increase);\n        ctx.lineTo(dx, dy);\n\n        let ex = cx + (r - (p / 2)) * Math.cos(a + increase);\n        let ey = cy + (r - (p / 2)) * Math.sin(a + increase);\n\n        ctx.lineTo(ex, ey);\n        ctx.lineTo(ax, ay);\n    }\n\n    if (options.colors[1]) {\n        ctx.fillStyle = options.colors[1];\n        ctx.fill();\n    }\n\n    ctx.stroke();\n};\n\nvar drawBarsBlocks = (functionContext) => {\n    let { data, options, ctx, h, w } = functionContext;\n\n    let percent = h / 255;\n    let width = w / 64;\n\n    for (let point = 0; point < 64; point++) {\n        let p = data[point]; //get value\n        p *= percent;\n        let x = width * point;\n\n        ctx.rect(x, h, width, -(p));\n    }\n\n    ctx.fillStyle = options.colors[1] || options.colors[0];\n    ctx.stroke();\n    ctx.fill();\n};\n\nvar drawDualbarsBlocks = (functionContext) => {\n    let { data, options, ctx, h, w } = functionContext;\n\n    let percent = h / 255;\n    let width = w / 50;\n\n    for (let point = 0; point <= 50; point++) {\n        let p = data[point]; //get value\n        p *= percent;\n        let x = width * point;\n\n        ctx.rect(x, (h / 2) + (p / 2), width, -(p));\n    }\n\n    if (options.colors[1]) {\n        ctx.fillStyle = options.colors[1];\n        ctx.fill();\n    }\n\n    ctx.stroke();\n};\n\nvar drawStar = (functionContext) => {\n    let { data, options, ctx, h, w } = functionContext;\n\n    let r = h / 4;\n    let offset = r / 4;\n    let cx = w / 2;\n    let cy = h / 2;\n    let point_count = 120;\n    let percent = (r - offset - 35) / (255);\n    let increase = (360 / point_count) * Math.PI / 180;\n\n    let top = [];\n    let bottom = [];\n\n    for (let point = 1; point <= point_count; point++) {\n        let p = ((data[200 % point])) * percent;\n        let a = point * increase;\n\n        let sx = cx + ((r) - p + offset) * Math.cos(a);\n        let sy = cy + ((r) - p + offset) * Math.sin(a);\n        ctx.moveTo(sx, sy);\n        bottom.push({\n            x: sx,\n            y: sy\n        });\n\n        let dx = cx + (r + p + offset) * Math.cos(a);\n        let dy = cy + (r + p + offset) * Math.sin(a);\n        ctx.lineTo(dx, dy);\n        top.push({\n            x: dx,\n            y: dy\n        });\n\n    }\n\n\n    ctx.moveTo(top[0].x, top[0].y);\n    for (let t in top) {\n        t = top[t];\n\n        ctx.lineTo(t.x, t.y);\n    }\n    ctx.closePath();\n\n    ctx.moveTo(bottom[0].x, bottom[0].y);\n    for (let b = bottom.length - 1; b >= 0; b++) {\n        b = bottom[b];\n\n        ctx.lineTo(b.x, b.y);\n    }\n    ctx.closePath();\n\n\n    if (options.colors[1]) {\n        ctx.fillStyle = options.colors[1];\n        ctx.fill();\n    }\n    ctx.stroke();\n\n    //inner color\n    ctx.beginPath();\n    ctx.moveTo(bottom[0].x, bottom[0].y);\n    for (let b in bottom) {\n        b = bottom[b];\n\n        ctx.lineTo(b.x, b.y);\n    }\n    ctx.closePath();\n\n\n    if (options.colors[2]) {\n        ctx.fillStyle = options.colors[2];\n        ctx.fill();\n    }\n    ctx.stroke();\n};\n\nvar drawRoundWave = (functionContext) => {\n    let { data, options, ctx, h, w } = functionContext;\n\n    let r = h / 4;\n    let cx = w / 2;\n    let cy = h / 2;\n    let point_count = 100;\n    let percent = r / 255;\n    let increase = (360 / point_count) * Math.PI / 180;\n    let p = 0;\n\n    // let z = (data[0] + min + offset) * percent;\n    let sx = cx + (r + p) * Math.cos(0);\n    let sy = cy + (r + p) * Math.sin(0);\n    ctx.moveTo(sx, sy);\n\n    for (let point = 1; point <= point_count; point++) {\n        let p = (data[350 % point]) * percent;\n        let a = point * increase;\n\n        let dx = cx + (r + p) * Math.cos(a);\n        let dy = cy + (r + p) * Math.sin(a);\n        ctx.lineTo(dx, dy);\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n\n    if (options.colors[1]) {\n        ctx.fillStyle = options.colors[1];\n        ctx.fill();\n    }\n};\n\nvar drawRings = (functionContext) => {\n    let { data, options, ctx, h, w, Helper } = functionContext;\n    let { colors } = options;\n    let helper = new Helper(ctx);\n    let minDimension = (h < w) ? h : w;\n\n    data = helper.mutateData(data, \"organize\");\n    data = [data.mids, data.vocals];\n\n    data[0] = helper.mutateData(data[0], \"scale\", minDimension / 4);\n    data[1] = helper.mutateData(data[1], \"scale\", minDimension / 8);\n\n    data[0] = helper.mutateData(data[0], \"shrink\", 1 / 5);\n    data[0] = helper.mutateData(data[0], \"split\", 2)[0];\n\n    data[0] = helper.mutateData(data[0], \"reverb\");\n    data[1] = helper.mutateData(data[1], \"reverb\");\n\n\n    let outerCircle = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data[0].length, data[0]);\n    let innerCircle = helper.getPoints(\"circle\", minDimension / 4, [w / 2, h / 2], data[1].length, data[1]);\n\n    helper.drawPolygon(outerCircle.end, { close: true, radius: 4, lineColor: colors[0], color: colors[1] });\n    helper.drawPolygon(innerCircle.end, { close: true, radius: 4, lineColor: colors[2], color: colors[3] });\n\n    let middle = ((minDimension / 4) + (minDimension / 2)) / 2;\n    let largerInner = data[1] = helper.mutateData(data[1], \"scale\", ((minDimension / 4) - (minDimension / 2)));\n    let innerBars = helper.getPoints(\"circle\", middle, [w / 2, h / 2], data[1].length, largerInner);\n    innerBars.start.forEach((start, i) => {\n        helper.drawLine(start, innerBars.end[i], { lineColor: colors[4] || colors[2] });\n    });\n};\n\nvar drawShineRings = (functionContext) => {\n    let { data, options, ctx, h, w, Helper } = functionContext;\n    let { colors } = options;\n\n    let helper = new Helper(ctx);\n    let minDimension = (h < w) ? h : w;\n\n    data = helper.mutateData(data, \"organize\");\n    data.vocals = helper.mutateData(data.vocals, \"scale\", (minDimension / 2) / 2);\n    data.base = helper.mutateData(data.base, \"scale\", (minDimension / 2) / 2);\n\n    let outerBars = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.vocals.length, data.vocals);\n    let innerWave = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.vocals.length, data.vocals, { offset: 100 });\n    let thinLine = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.base.length, data.base, { offset: 100 });\n\n    outerBars.start.forEach((start, i) => {\n        helper.drawLine(start, outerBars.end[i], { lineColor: colors[0] });\n    });\n\n    helper.drawPolygon(innerWave.start, { close: true, lineColor: colors[1], color: colors[3], radius: 5 });\n    helper.drawPolygon(thinLine.start, { close: true, lineColor: colors[2], color: colors[4], radius: 5 });\n};\n\nvar drawCubes = (functionContext) => {\n    let { data, options, ctx, h, w, Helper } = functionContext;\n    let { colors } = options;\n    let helper = new Helper(ctx);\n\n    data = helper.mutateData(data, \"organize\").base;\n\n    data = helper.mutateData(data, \"shrink\", 20).slice(0, 19);\n    data = helper.mutateData(data, \"scale\", h);\n\n    let points = helper.getPoints(\"line\", w, [0, h], data.length, data);\n\n    let spacing = 5;\n    let squareSize = (w / 20) - spacing;\n    let colorIndex = 0;\n\n    points.start.forEach((start, i) => {\n        let squareCount = Math.ceil(data[i] / squareSize);\n\n        //find color stops from total possible squares in bar \n        let totalSquares = (h - (spacing * (h / squareSize))) / squareSize;\n        let colorStop = Math.ceil(totalSquares / colors.length);\n\n        for (let j = 1; j <= squareCount; j++) {\n            let origin = [start[0], (start[1] - (squareSize * j) - (spacing * j))];\n            helper.drawSquare(origin, squareSize, { color: colors[colorIndex], lineColor: \"black\" });\n            if (j % colorStop == 0) {\n                colorIndex++;\n                if (colorIndex >= colors.length) colorIndex = colors.length - 1;\n            }\n        }\n        colorIndex = 0;\n    });\n};\n\nvar drawBigBars = (functionContext) => {\n    let { data, options, ctx, h, w, Helper } = functionContext;\n    let { colors } = options;\n    const helper = new Helper(ctx);\n\n    data = helper.mutateData(data, \"organize\").vocals;\n    data = helper.mutateData(data, \"shrink\", 10);\n    data = helper.mutateData(data, \"scale\", h);\n    data = helper.mutateData(data, \"amp\", 1);\n    let points = helper.getPoints(\"line\", w, [0, h / 2], data.length, data, { offset: 50 });\n\n    let colorIndex = 0;\n    let colorStop = Math.ceil(data.length / colors.length);\n    points.start.forEach((start, i) => {\n        if ((i + 1) % colorStop == 0) colorIndex++;\n        helper.drawRectangle(start, data[i], w / data.length, { color: colors[colorIndex] });\n    });\n\n};\n\nvar drawShockwave = (functionContext) => {\n    let { data, options, ctx, h, w, Helper } = functionContext;\n    let { colors } = options;\n\n    let helper = new Helper(ctx);\n\n    data = helper.mutateData(data, \"shrink\", 300);\n    data = helper.mutateData(data, \"scale\", h / 2);\n    data = helper.mutateData(data, \"split\", 4).slice(0, 3);\n\n    let colorIndex = 0;\n    data.forEach((points) => {\n        let wavePoints = helper.getPoints(\"line\", w, [0, h / 2], points.length, points);\n        helper.drawPolygon(wavePoints.end, { lineColor: colors[colorIndex], radius: (h * .015) });\n\n        let invertedPoints = helper.getPoints(\"line\", w, [0, h / 2], points.length, points, { offset: 100 });\n        helper.drawPolygon(invertedPoints.start, { lineColor: colors[colorIndex], radius: (h * .015) });\n        colorIndex++;\n    });\n};\n\nvar drawFireworks = (functionContext) => {\n    let { data, options, ctx, h, w, Helper } = functionContext;\n    let { colors } = options;\n    const helper = new Helper(ctx);\n\n    data = helper.mutateData(data, \"shrink\", 200).slice(0, 120);\n    data = helper.mutateData(data, \"mirror\");\n    data = helper.mutateData(data, \"scale\", (h / 4) + ((h / 4) * .35));\n\n    let points = helper.getPoints(\"circle\", h / 2, [w / 2, h / 2], data.length, data, { offset: 35, rotate: 270 });\n\n    points.start.forEach((start, i) => {\n        helper.drawLine(start, points.end[i]);\n    });\n\n    helper.drawPolygon(points.start, { close: true });\n\n    points.end.forEach((end, i) => {\n        helper.drawCircle(end, h * .01, { color: colors[0] });\n    });\n};\n\nvar drawStatic = (functionContext) => {\n    let { data, options, ctx, h, w, Helper } = functionContext;\n    let helper = new Helper(ctx);\n\n    data = helper.mutateData(data, \"shrink\", 1 / 8);\n    data = helper.mutateData(data, \"split\", 2)[0];\n    data = helper.mutateData(data, \"scale\", h);\n\n    let points = helper.getPoints(\"line\", w, [0, h / 2], data.length, data, { offset: 50 });\n    let prevPoint = null;\n    points.start.forEach((start, i) => {\n        if (prevPoint) {\n            helper.drawLine(prevPoint, start);\n        }\n        helper.drawLine(start, points.end[i]);\n        prevPoint = points.end[i];\n    });\n\n\n};\n\nvar drawWeb = (functionContext) => {\n    let { data, options, ctx, h, w, Helper } = functionContext;\n    let { colors } = options;\n    const helper = new Helper(ctx);\n    let minDimension = (h < w) ? h : w;\n\n    data = helper.mutateData(data, \"shrink\", 100);\n    data = helper.mutateData(data, \"split\", 2)[0];\n    data = helper.mutateData(data, \"scale\", h / 4);\n\n    let dataCopy = data;\n\n    let points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.length, data);\n    helper.drawPolygon(points.end, { close: true });\n\n    points.start.forEach((start, i) => {\n        helper.drawLine(start, points.end[i]);\n    });\n\n    data = helper.mutateData(data, \"scale\", .7);\n    points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.length, data);\n    helper.drawPolygon(points.end, { close: true });\n\n    data = helper.mutateData(data, \"scale\", .3);\n    points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.length, data);\n    helper.drawPolygon(points.end, { close: true });\n\n    helper.drawCircle([w / 2, h / 2], minDimension / 2, { color: colors[2] });\n\n    dataCopy = helper.mutateData(dataCopy, \"scale\", 1.4);\n    points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], dataCopy.length, dataCopy);\n    points.end.forEach((end, i) => {\n        helper.drawCircle(end, minDimension * .01, { color: colors[1], lineColor: colors[1] || colors[0] });\n    });\n};\n\nvar drawStitches = (functionContext) => {\n    let { data, options, ctx, h, w, Helper } = functionContext;\n    let helper = new Helper(ctx);\n    let minDimension = (h < w) ? h : w;\n\n    data = helper.mutateData(data, \"shrink\", 200);\n    data = helper.mutateData(data, \"split\", 2)[0];\n    data = helper.mutateData(data, \"scale\", h / 2);\n\n    let points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.length, data, { offset: 50 });\n\n    helper.drawPolygon(points.end, { close: true });\n    helper.drawPolygon(points.start, { close: true });\n\n    for (let i = 0; i < points.start.length; i += 1) {\n        let start = points.start[i];\n        i++;\n        let end = points.end[i] || points.end[0];\n\n        helper.drawLine(start, end);\n        helper.drawLine(end, points.start[i + 1] || points.start[0]);\n    }\n};\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar origami_1 = createCommonjsModule(function (module, exports) {\n/*!\n * Origami.js 0.5.0\n * https://origamijs.com/\n *\n * Copyright Raphael Amorim 2016\n * Released under the GPL-4.0 license\n *\n * Date: 2016-09-23T03:42Z\n */\n\n(function( window ) {\n\n/**\n * Config object: Maintain internal state\n * Later exposed as Origami.config\n * `config` initialized at top of scope\n */\n\nvar Origami = {\n  // Current Paper\n  paper: null\n};\n\nvar config = {\n  // Document Styles\n  documentStyles: [],\n\n  // Virtual Styles\n  virtualStyles: {},\n\n  // All contexts saved\n  contexts: [],\n\n  // Origami Shapes Defaults\n  defaults: {\n    arc: {\n      background: 'rgba(0, 0, 0, 0)',\n      strokeStyle: 'rgba(0, 0, 0, 0)',\n      lineWidth: null,\n    },\n    rect: {\n      background: 'rgba(0, 0, 0, 0)',\n      strokeStyle: 'rgba(0, 0, 0, 0)',\n      lineWidth: null,\n    },\n    polygon: {\n      background: 'rgba(0, 0, 0, 0)',\n      strokeStyle: 'rgba(0, 0, 0, 0)',\n      lineWidth: null,\n    },\n    line: {\n      strokeStyle: 'rgba(0, 0, 0, 0)',\n      lineWidth: null,\n    },\n    text: {\n      font: '14px Helvetica',\n      strokeStyle: 'rgba(0, 0, 0, 0)',\n      color: '#000',\n      lineWidth: null,\n    }\n  }\n};\n\nvar prefix = \"[origami.js]\";\n\nOrigami.warning = function warning(message, obj){\n    if (console && console.warn)\n        console.warn(prefix, message, obj);\n};\n\nOrigami.error = function error(message){\n    throw new Error(prefix.concat(' ' + message));\n};\nOrigami.init = function(el) {\n  if (el.canvas) {\n    el = el.canvas;\n  } else {\n    el = document.querySelector(el);\n  }\n\n  if (!el)\n    this.error('Please use a valid selector or canvas context');\n\n  var existentContext = exists(el, config.contexts);\n  if (existentContext) {\n    this.paper = existentContext;\n    return this;\n  }\n\n  if (!el.getContext)\n    this.error('Please verify if it\\'s a valid canvas element');\n\n  el.width = el.clientWidth;\n  el.height = el.clientHeight;\n  var context = el.getContext('2d');\n  var current = {\n    element: el,\n    queue: [],\n    index: config.contexts.length,\n    flip: false,\n    frame: null,\n    ctx: context,\n    width: el.width,\n    height: el.height,\n  };\n\n  config.contexts.push(current);\n  this.paper = current;\n  return this;\n};\n\nOrigami.styles = function() {\n  if (!config.virtualStyles.length)\n    defineDocumentStyles();\n\n  var selectors = arguments;\n  if (!selectors.length) {\n    config.virtualStyles['empty'] = true;\n    return this;\n  }\n\n  for (var i = 0; i < selectors.length; i++) {\n    var style = styleRuleValueFrom(selectors[i], (config.documentStyles[0] || []));\n    config.virtualStyles[selectors[i]] = style;\n  }\n  return this;\n};\n\nOrigami.getPaper = function() {\n  return this.paper;\n};\n\nOrigami.canvasCtx = function() {\n  return this.paper.ctx;\n};\n\nOrigami.getContexts = function() {\n  return config.contexts;\n};\n\nOrigami.cleanContexts = function() {\n  config.contexts = [];\n};\n\nOrigami.createComponent = function(component, fn) {\n  Origami[component] = function(props) {\n    fn.bind(this, this, props)();\n    return this;\n  };\n};\n\nOrigami.fn = {};\n\nOrigami.draw = function(options) {\n  var self = this,\n    customRender = false,\n    ctx = self.paper.ctx;\n\n  if (typeof(options) === 'string') {\n    customRender = new origami.fn[options](self.paper);\n    self.paper['ctx'] = customRender;\n  }\n\n  var abs = new Screen(self.paper),\n    queueList = self.paper.queue;\n\n  for (var i = 0; i < queueList.length; i++) {\n    if (queueList[i].loaded === false || queueList[i].failed) {\n      Origami.warning('couldn\\'t able to load:', queueList[i].params);\n    }\n    abs[queueList[i].assign](queueList[i].params);\n  }\n  self.paper.queue = [];\n\n  if (customRender) {\n    customRender.draw();\n    self.paper.ctx = ctx;\n  }\n\n  if (typeof(options) === 'function')\n    options();\n};\n\nOrigami.load = function(fn) {\n  var mOrigami = clone(this);\n  mOrigami.paper = this.paper;\n  var loadInterval = setInterval(function() {\n    var dataLoad = mOrigami.paper.queue.filter(function(item) {\n      return (item.loaded === false && !item.failed);\n    });\n\n    // When already loaded\n    if (!dataLoad.length) {\n      clearInterval(loadInterval);\n      fn.bind(mOrigami, mOrigami)();\n    }\n  }, 1);\n};\n\nfunction Queue(assign, params, loaded) {\n  this.paper.queue.push({\n    assign: assign,\n    params: params,\n    loaded: loaded\n  });\n}\n\nvar queue = Queue.bind(Origami);\n\n// Utilities.js\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\n/**\n * Check if element exists in a Array of NodeItems\n * @param {NodeItem} current nodeItem to check\n * @param {Array} array of NodeItems\n * @returns {NodeItem} NodeItem exitent in array\n */\nfunction exists(el, arr) {\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i].element.isEqualNode(el))\n      return arr[i];\n  }\n  return false;\n}\n\n/**\n * Filter arguments by rules\n * @param {Array} methods arguments\n * @param {Object} rules to apply\n * @returns {Object} arguments filtered\n */\nfunction argsByRules(argsArray, rules) {\n  var params = rules || ['x', 'y', 'width', 'height'],\n    args = {};\n\n  for (var i = 0; i < argsArray.length; i++) {\n    if (typeof(argsArray[i]) === \"object\")\n      args[\"style\"] = argsArray[i];\n    else\n    if (params.length)\n      args[params.shift()] = argsArray[i];\n  }\n\n  args.style = normalizeStyle(args.style);\n\n  if ((typeof(args.x) === 'string') && (typeof(args.y) === 'string'))\n    args = smartCoordinates(args);\n\n  return args;\n}\n\nfunction getBorderStyleObject(prop) {\n  return normalizeStyle({border: prop});\n}\n\nfunction normalizeStyle(style) {\n  if (!style)\n    style = {};\n\n  var borderSize = (style.borderSize || null),\n    borderColor = (style.borderColor || null),\n    borderStyle = (style.borderStyle || []);\n\n  if (style.border) {\n    var border = [],\n      borderString = style.border;\n\n    // 0 - Size: [0-9]px\n    border = border.concat(style.border.match(/[0-9]*\\.?[0-9]px?/i));\n    borderString = borderString.replace(/[0-9]*\\.?[0-9]px?/i, '');\n\n    // 1 - Style\n    border = border.concat(borderString.match(/solid|dashed|dotted/i));\n    borderString = borderString.replace(/solid|dashed|dotted/i, '');\n\n    // 2 - Color\n    border = border.concat(borderString.match(/[^\\s]+/i));\n\n    if (!borderSize)\n      borderSize = border[0];\n    if (!borderColor)\n      borderColor = border[2];\n\n    borderStyle = border[1];\n  }\n\n  if (borderSize)\n    borderSize = borderSize.replace(/[^0-9]/g, '');\n\n  if (typeof(borderStyle) === 'string') {\n    if (borderStyle === 'dashed')\n      borderStyle = [12];\n    else if (borderStyle === 'dotted')\n      borderStyle = [3];\n    else\n      borderStyle = [];\n  }\n\n  style['borderSize'] = borderSize;\n  style['borderStyle'] = borderStyle;\n  style['borderColor'] = borderColor;\n  return style;\n}\n\n/**\n * Return args object with new coordinates based on behavior\n * @returns {Object} args\n */\nfunction smartCoordinates(args) {\n  var x = args.x,\n    y = args.y;\n\n  var paper = Origami.getPaper(),\n    elmWidth = paper.element.width,\n    elmHeight = paper.element.height,\n    radius = (args.r || 0);\n\n  var width = (args.width || radius),\n    height = (args.height || width);\n\n  var axis = {\n    x: [ 'right', 'center', 'left' ],\n    y: [ 'top', 'center', 'bottom' ]\n  };\n\n  if (axis.x.indexOf(x) !== -1) {\n    if (x === 'right')\n      x = Math.floor(elmWidth - width);\n    else if (x === 'center')\n      if (radius)\n        x = Math.floor(elmWidth / 2);\n      else\n        x = Math.floor((elmWidth / 2) - (width / 2));\n    else if (x === 'left')\n      x = radius;\n  } else if ((x + '').substr(-1) === '%') {\n    x = (elmWidth * parseInt(x, 10)) / 100;\n  } else {\n    x = 0;\n  }\n\n  if (axis.y.indexOf(y) !== -1) {\n    if (y === 'top')\n      y = radius;\n    else if (y === 'center')\n      if (radius)\n        y = Math.floor(elmHeight / 2);\n      else\n        y = Math.floor((elmHeight / 2) - (height / 2));\n    else if (y === 'bottom')\n      y = Math.floor(elmHeight - height);\n  } else if ((y + '').substr(-1) === '%') {\n    y = (elmHeight * parseInt(y, 10)) / 100;\n  } else {\n    y = 0;\n  }\n\n  args.y = y;\n  args.x = x;\n  return args;\n}\n\n/**\n * Return all documentStyles to a especified origami context\n * @returns undefined\n */\nfunction defineDocumentStyles() {\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    var mysheet = document.styleSheets[i],\n      myrules = mysheet.cssRules ? mysheet.cssRules : mysheet.rules;\n    config.documentStyles.push(myrules);\n  }\n}\n\n/**\n * Merge defaults with user options\n * @param {Object} defaults Default settings\n * @param {Object} options User options\n * @returns {Object} Merged values of defaults and options\n */\nfunction extend(a, b, undefOnly) {\n  for (var prop in b) {\n    if (hasOwn.call(b, prop)) {\n\n      // Avoid \"Member not found\" error in IE8 caused by messing with window.constructor\n      // This block runs on every environment, so `global` is being used instead of `window`\n      // to avoid errors on node.\n      if (prop !== \"constructor\" || a !== commonjsGlobal) {\n        if (b[prop] === undefined) {\n          delete a[prop];\n        } else if (!(undefOnly && typeof a[prop] !== \"undefined\")) {\n          a[prop] = b[prop];\n        }\n      }\n    }\n  }\n  return a;\n}\n\n/**\n * Get Style Rule from a specified element\n * @param {String} selector from element\n * @param {Array} Document Style Rules\n * @returns {Object} Merged values of defaults and options\n */\nfunction styleRuleValueFrom(selector, documentStyleRules) {\n  for (var j = 0; j < documentStyleRules.length; j++) {\n    if (documentStyleRules[j].selectorText && documentStyleRules[j].selectorText.toLowerCase() === selector) {\n      return documentStyleRules[j].style;\n    }\n  }\n}\n\n/**\n * Clone a object\n * @param {Object} object\n * @returns {Object} cloned object\n */\nfunction clone(obj) {\n  if (null == obj || \"object\" != typeof obj) return obj;\n  var copy = obj.constructor();\n  for (var attr in obj) {\n    if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n  }\n  return copy;\n}\n\nfunction Screen(currentContext) {\n  this.paper = currentContext;\n}\n\nScreen.prototype.translate = function(params) {\n  this.paper.ctx.translate(params.x, params.y);\n};\n\nScreen.prototype.background = function(params) {\n  this.paper.element.style.backgroundColor = params.color;\n};\n\nScreen.prototype.restore = function() {\n  this.paper.ctx.restore();\n};\n\nScreen.prototype.save = function() {\n  this.paper.ctx.save();\n};\n\nScreen.prototype.composition = function(params) {\n  this.paper.ctx.globalCompositeOperation = params.globalComposite;\n};\n\nScreen.prototype.rotate = function(params) {\n  this.paper.ctx.rotate(params.degrees);\n};\n\nScreen.prototype.scale = function(params) {\n  this.paper.ctx.scale(params.width, params.height);\n};\n\nScreen.prototype.flip = function(params) {\n  this.paper.flip = 'horizontal';\n  if (params.type && typeof(params.type) === 'string')\n    this.paper.flip = params.type;\n};\n\nScreen.prototype.flipEnd = function() {\n  this.paper.flip = false;\n};\n\nScreen.prototype.clear = function() {\n  this.paper.ctx.clearRect(0, 0, this.paper.width, this.paper.height);\n};\n\nfunction ArcShape(params) {\n  var args = params.args,\n    style = args.style,\n    def = config.defaults.arc;\n\n  this.paper.ctx.beginPath();\n  this.paper.ctx.setLineDash(style.borderStyle);\n  this.paper.ctx.arc(args.x, args.y, (args.r || def.radius), (args.sAngle || 0), (args.eAngle || 2 * Math.PI));\n  this.paper.ctx.fillStyle = (style.background || style.bg) ? (style.background || style.bg) : def.background;\n  this.paper.ctx.fill();\n  this.paper.ctx.lineWidth = (style.borderSize) ? style.borderSize : def.lineWidth;\n  this.paper.ctx.strokeStyle = (style.borderColor) ? style.borderColor : def.strokeStyle;\n  this.paper.ctx.stroke();\n  this.paper.ctx.setLineDash([]);\n  this.paper.ctx.closePath();\n}\n\nScreen.prototype.arc = ArcShape;\n\nOrigami.arc = function() {\n  var args = [].slice.call(arguments);\n  args = argsByRules(args, ['x', 'y', 'r', 'sAngle', 'eAngle']);\n\n  queue('arc', {\n    args: args\n  });\n  return this;\n};\n\nfunction ImageShape(params) {\n  var image = params.image,\n    x = params.x,\n    y = params.y,\n    width = params.width,\n    height = params.height;\n\n  this.paper.ctx.save();\n  if (this.paper.flip) {\n    if (this.paper.flip === 'horizontal') {\n      this.paper.ctx.scale(-1, 1);\n      width = width * -1;\n      x = x * -1;\n    }\n    if (this.paper.flip === 'vertical') {\n      this.paper.ctx.scale(1, -1);\n      height = height * -1;\n      y = y * -1;\n    }\n  }\n\n  this.paper.ctx.beginPath();\n  this.paper.ctx.drawImage(image, Math.floor((x || 0)), Math.floor((y || 0)), width, height);\n  this.paper.ctx.closePath();\n  this.paper.ctx.restore();\n}\n\nScreen.prototype.image = ImageShape;\n\nOrigami.image = function(image, x, y, width, height) {\n  var self = this;\n  if (!image)\n    return this;\n\n  if (typeof(image) === 'string') {\n    var img = new Image();\n    img.src = image;\n    image = img;\n  }\n\n  var item = {\n    image: image,\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n\n  if ((typeof(item.x) === 'string') && (typeof(item.y) === 'string'))\n    item = smartCoordinates(item);\n\n  if (image.complete) {\n    item.width = width || image.naturalWidth;\n    item.height = height || image.naturalHeight;\n\n    queue('image', item);\n    return self;\n  }\n\n  queue('image', item, false);\n  var reference = (self.paper.queue.length - 1),\n    currentQueue = config.contexts[this.paper.index].queue[reference];\n\n  image.addEventListener('load', function() {\n    if (!currentQueue)\n      return false;\n    currentQueue.params.width = (item.width || image.naturalWidth);\n    currentQueue.params.height = (item.height || image.naturalHeight);\n    currentQueue.loaded = true;\n  });\n\n  image.addEventListener('error', function() {\n    if (!currentQueue)\n      return false;\n    currentQueue.failed = true;\n  });\n\n  return self;\n};\n\nfunction LineShape(params) {\n  var def = config.defaults.line,\n      style = params.style,\n      pointA = params.pointA,\n      pointB = params.pointB;\n\n  this.paper.ctx.beginPath();\n  this.paper.ctx.setLineDash(style.borderStyle);\n  this.paper.ctx.moveTo((pointA.x || 0), (pointA.y || 0));\n  this.paper.ctx.lineTo((pointB.x || 0), (pointB.y || 0));\n\n  this.paper.ctx.lineWidth = (style.borderSize) ? style.borderSize : def.lineWidth;\n  this.paper.ctx.strokeStyle = (style.borderColor) ? style.borderColor : def.strokeStyle;\n  this.paper.ctx.stroke();\n  this.paper.ctx.setLineDash([]);\n  this.paper.ctx.closePath();\n}\n\nScreen.prototype.line = LineShape;\n\nOrigami.line = function(pointA, pointB, style) {\n  style = normalizeStyle(style);\n\n  queue('line', {\n    pointA: pointA,\n    pointB: pointB,\n    style: style\n  });\n  return this;\n};\n\nfunction PolygonShape(params) {\n  var args = params.args,\n    style = params.style,\n    def = config.defaults.polygon;\n\n  this.paper.ctx.beginPath();\n  this.paper.ctx.setLineDash(style.borderStyle);\n  this.paper.ctx.fillStyle = (style.background) ? style.background : def.background;\n  this.paper.ctx.lineWidth = (style.borderSize) ? style.borderSize : def.lineWidth;\n  this.paper.ctx.strokeStyle = (style.borderColor) ? style.borderColor : def.strokeStyle;\n\n  for (var p = 0; p < args.length; p++) {\n    if (!args[p].x)\n      continue;\n\n    if (p)\n      this.paper.ctx.lineTo(args[p].x, args[p].y);\n    else\n      this.paper.ctx.moveTo(args[p].x, args[p].y);\n  }\n\n  this.paper.ctx.fill();\n  this.paper.ctx.stroke();\n  this.paper.ctx.setLineDash([]);\n  this.paper.ctx.closePath();\n}\n\nScreen.prototype.polygon = PolygonShape;\n\nOrigami.polygon = function() {\n  var args = [].slice.call(arguments),\n    settedArgs = argsByRules(args);\n\n  queue('polygon', {\n    style: settedArgs.style,\n    args: args\n  });\n  return this;\n};\n\nfunction RectShape(params) {\n  var def = config.defaults.rect,\n    style = params.style,\n    args = params.args;\n\n  this.paper.ctx.beginPath();\n  this.paper.ctx.setLineDash(style.borderStyle);\n  this.paper.ctx.fillStyle = (style.background) ? style.background : def.background;\n  this.paper.ctx.fillRect(args.x, args.y, args.width, (args.height || args.width));\n\n  this.paper.ctx.lineWidth = (style.borderSize) ? style.borderSize : def.lineWidth;\n  this.paper.ctx.strokeStyle = (style.borderColor) ? style.borderColor : def.strokeStyle;\n  this.paper.ctx.strokeRect(args.x, args.y, args.width, (args.height || args.width));\n  this.paper.ctx.setLineDash([]);\n  this.paper.ctx.closePath();\n}\n\nScreen.prototype.rect = RectShape;\n\nOrigami.rect = function() {\n  var args = [].slice.call(arguments);\n  args = argsByRules(args);\n\n  queue('rect', {\n    style: args.style,\n    args: args\n  });\n  return this;\n};\n\nOrigami.border = function() {\n  var args = [].slice.call(arguments);\n  args = argsByRules(args);\n\n  queue('rect', {\n    style: args.style,\n    args: {\n      x: 0,\n      y: 0,\n      width: this.paper.width,\n      height: this.paper.height\n    }\n  });\n  return this;\n};\n\nfunction CSSShape(style) {\n  var self = this,\n    style = config.virtualStyles[style];\n\n  if (!style)\n    return self;\n\n  // TODO: Draw in all canvas\n  var data = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' +\n    self.paper.width + 'px\" height=\"' + self.paper.height + 'px\">' +\n    '<foreignObject width=\"100%\" height=\"100%\">' +\n    '<div xmlns=\"http://www.w3.org/1999/xhtml\">' +\n    '<div style=\"' + style.cssText + '\"></div>' +\n    '</div></foreignObject>' +\n    '</svg>';\n\n  var DOMURL = window.URL || window.webkitURL || window,\n    img = new Image(),\n    svg = new Blob([data], {\n      type: 'image/svg+xml;charset=utf-8'\n    });\n\n  var url = DOMURL.createObjectURL(svg);\n  img.src = url;\n\n  img.addEventListener('load', function() {\n    self.paper.ctx.beginPath();\n    self.paper.ctx.drawImage(img, 0, 0);\n    DOMURL.revokeObjectURL(url);\n    self.paper.ctx.closePath();\n  });\n\n  return self;\n}\n\nScreen.prototype.CSSShape = CSSShape;\n\nOrigami.shape = function(style) {\n  queue('CSSShape', style);\n  return this;\n};\n\nfunction SpriteShape(params) {\n  var properties = params.properties,\n    dw = params.width / properties.frames;\n\n  drawSprite.call(this, {\n    image: params.image,\n    posX: 0,\n    posY: 0,\n    frame: properties.frames,\n    loop: properties.loop,\n    width: dw,\n    widthTotal: params.width,\n    height: params.height,\n    dx: params.x,\n    dy: params.y,\n    speed: properties.speed,\n    animation: null\n  });\n}\n\nfunction drawSprite(sprite) {\n  var self = this;\n\n  if (sprite.posX === sprite.widthTotal) {\n    if (sprite.loop === false) {\n      window.cancelAnimationFrame(sprite.animation);\n      return;\n    }\n    sprite.posX = 0;\n  }\n\n  self.paper.ctx.clearRect(sprite.dx, sprite.dy, sprite.width, sprite.height);\n\n  self.paper.ctx.beginPath();\n  self.paper.ctx.drawImage(sprite.image, sprite.posX, sprite.posY,\n    sprite.width, sprite.height, sprite.dx, sprite.dy,\n    sprite.width, sprite.height);\n  self.paper.ctx.closePath();\n\n  sprite.posX = sprite.posX + sprite.width;\n\n  setTimeout(function() {\n    sprite.animation = window.requestAnimationFrame(drawSprite.bind(self, sprite));\n  }, sprite.speed);\n}\n\nScreen.prototype.sprite = SpriteShape;\n\nOrigami.sprite = function(x, y, properties) {\n  var self = this;\n\n  if (!properties || !properties.src)\n    return this;\n\n  var image = new Image(),\n    frames = (properties.frames || 0),\n    loop = (properties.loop || true),\n    speed = (properties.speed || 10);\n\n  image.src = properties.src;\n\n  var item = {\n    x: x,\n    y: y,\n    image: image,\n    properties: properties,\n    width: 0,\n    height: 0\n  };\n\n  if (image.complete) {\n    item.width = image.naturalWidth;\n    item.height = image.naturalHeight;\n    queue('sprite', item);\n    return self;\n  }\n\n  queue('sprite', item, false);\n  var reference = (self.paper.queue.length - 1),\n    currentQueue = config.contexts[this.paper.index].queue[reference];\n\n  image.addEventListener('load', function() {\n    if (!currentQueue)\n      return false;\n    currentQueue.params.width = image.naturalWidth;\n    currentQueue.params.height = image.naturalHeight;\n    currentQueue.loaded = true;\n  });\n\n  image.addEventListener('error', function() {\n    if (!currentQueue)\n      return false;\n    currentQueue.failed = true;\n  });\n\n  return this;\n};\n\nfunction TextShape(params) {\n  var def = config.defaults.text,\n    text = params.text,\n    x = params.x,\n    y = params.y,\n    style = params.style;\n\n  this.paper.ctx.beginPath();\n  this.paper.ctx.setLineDash(style.borderStyle);\n  this.paper.ctx.lineWidth = (style.borderSize) ? style.borderSize : def.lineWidth;\n  this.paper.ctx.strokeStyle = (style.borderColor) ? style.borderColor : def.strokeStyle;\n  this.paper.ctx.font = (style.font || def.font);\n  this.paper.ctx.fillStyle = (style.color || def.color);\n  this.paper.ctx.textAlign = (style.align || def.align);\n  this.paper.ctx.fillText(text, x, y);\n  this.paper.ctx.strokeText(text, x, y);\n  this.paper.ctx.fill();\n  this.paper.ctx.stroke();\n  this.paper.ctx.setLineDash([]);\n  this.paper.ctx.closePath();\n}\n\nScreen.prototype.text = TextShape;\n\nOrigami.text = function(text, x, y, style) {\n  style = normalizeStyle(style);\n\n  var item = {\n    text: text,\n    x: x,\n    y: y,\n    style: style\n  };\n\n  if ((typeof(item.x) === 'string') && (typeof(item.y) === 'string'))\n    item = smartCoordinates(item);\n\n  queue('text', item);\n  return this;\n};\n\nfunction ChartLine(config) {\n  var ctx = this.paper.ctx,\n    width = this.paper.width,\n    height = this.paper.height;\n\n  var line = getBorderStyleObject(config.line || \"1px solid #000\");\n  var lineVariance = 2;\n\n  var xPadding = 40;\n  var yPadding = 40;\n  var data = [];\n\n  var gridLines = {\n    vertical: true,\n    horizontal: true\n  };\n\n  if (config.gridLines) {\n    if (config.gridLines.vertical === false)\n      gridLines.vertical = false;\n\n    if (config.gridLines.horizontal === false)\n      gridLines.horizontal = false;\n  }\n\n  for (var i = 0; i < config.labels.length; i++) {\n    data.push({\n      X: config.labels[i],\n      Y: config.data[i]\n    });\n  }\n\n  function getMaxY() {\n    var max = 0;\n\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].Y > max) {\n        max = data[i].Y;\n      }\n    }\n\n    max += 10 - max % 10;\n    return max;\n  }\n\n  function getXPixel(val) {\n    return ((width - xPadding) / data.length) * val + xPadding;\n  }\n\n  function getYPixel(val) {\n    return height - (((height - yPadding) / getMaxY()) * val) - yPadding;\n  }\n\n  ctx.lineWidth = 0.8;\n  ctx.strokeStyle = '#999';\n  ctx.font = 'normal 12px Helvetica';\n  ctx.fillStyle = '#5e5e5e';\n  ctx.textAlign = \"center\";\n\n  ctx.beginPath();\n  ctx.moveTo(xPadding, yPadding / lineVariance);\n  ctx.lineTo(xPadding, height - yPadding);\n  ctx.lineTo(width - (xPadding / lineVariance), height - yPadding);\n  ctx.stroke();\n\n  // Data\n  ctx.textAlign = \"right\";\n  ctx.textBaseline = \"middle\";\n  for (var i = 0; i < getMaxY(); i += 10) {\n    if (gridLines.horizontal) {\n      ctx.beginPath();\n      ctx.lineWidth = 0.8;\n      ctx.strokeStyle = '#e7e7e7';\n      ctx.moveTo(xPadding - 5, getYPixel(i));\n      ctx.lineTo(width - (xPadding / lineVariance), getYPixel(i));\n      ctx.stroke();\n    }\n\n    ctx.fillText(i, xPadding - 10, getYPixel(i));\n  }\n\n  // Labels\n  ctx.textAlign = \"left\";\n  for (var i = 0; i < data.length; i++) {\n    if (gridLines.vertical) {\n      ctx.beginPath();\n      ctx.lineWidth = 0.8;\n      ctx.strokeStyle = '#e7e7e7';\n      ctx.moveTo(getXPixel(i), height - yPadding + 10);\n      ctx.lineTo(getXPixel(i), yPadding / lineVariance);\n      ctx.stroke();\n    }\n\n    ctx.fillText(data[i].X, getXPixel(i), height - yPadding + 20);\n  }\n\n  ctx.beginPath();\n  ctx.lineWidth = line.borderSize;\n  ctx.setLineDash(line.borderStyle);\n  ctx.strokeStyle = line.borderColor;\n  ctx.moveTo(getXPixel(0), getYPixel(data[0].Y));\n\n  for (var i = 1; i < data.length; i++) {\n    ctx.lineTo(getXPixel(i), getYPixel(data[i].Y));\n  }\n  ctx.stroke();\n  ctx.setLineDash([]);\n\n  if (config.points) {\n    ctx.fillStyle = (config.pointsColor) ? config.pointsColor : 'rgb(75,75,75)';\n    for (var i = 0; i < data.length; i++) {\n      ctx.beginPath();\n      ctx.arc(getXPixel(i), getYPixel(data[i].Y), 3, 0, Math.PI * 2, true);\n      ctx.fill();\n    }\n  }\n}\n\nScreen.prototype.chartLine = ChartLine;\n\nOrigami.chartLine = function(config) {\n  queue('chartLine', config);\n  return this;\n};\n// Resource.js\n\nOrigami.background = function(color) {\n  queue('background', {\n    color: color\n  });\n  return this;\n};\n\nOrigami.restore = function() {\n  queue('restore');\n  return this;\n};\n\nOrigami.save = function() {\n  queue('save');\n  return this;\n};\n\nOrigami.composition = function(globalComposite) {\n  queue('composition', {\n    globalComposite: globalComposite\n  });\n  return this;\n};\n\nOrigami.translate = function(x, y) {\n  if (x === undefined || x === null) {\n    x = 'reset';\n  }\n\n  if (typeof(x) === 'string') {\n    if (x === 'center') {\n      x = context.width / 2;\n      y = context.height / 2;\n    }\n    if (x === 'reset') {\n      x = -context.width / 2;\n      y = -context.height / 2;\n    }\n  }\n\n  queue('translate', {\n    x: x,\n    y: y\n  });\n  return this;\n};\n\nOrigami.rotate = function(degrees) {\n  if (typeof(degrees) === 'undefined')\n    degrees = 'slow';\n\n  if (typeof(degrees) === 'string') {\n    // Slow\n    if (degrees === 'slow')\n      degrees = ((2 * Math.PI) / 60) * new Date().getSeconds() +\n      ((2 * Math.PI) / 60000) * new Date().getMilliseconds();\n\n    // Normal\n    else if (degrees === 'normal')\n      degrees = ((2 * Math.PI) / 30) * new Date().getSeconds() +\n      ((2 * Math.PI) / 30000) * new Date().getMilliseconds();\n\n    // Fast\n    else if (degrees === 'fast')\n      degrees = ((2 * Math.PI) / 6) * new Date().getSeconds() +\n      ((2 * Math.PI) / 6000) * new Date().getMilliseconds();\n  }\n\n  queue('rotate', {\n    degrees: degrees\n  });\n  return this;\n};\n\nOrigami.stopRender = function() {\n  window.cancelAnimationFrame(this.paper.frame);\n  this.paper.frame = false;\n};\n\nOrigami.play = function() {\n  this.paper.frame = 1;\n  return this;\n};\n\nOrigami.startRender = function(fn) {\n  var self = this;\n  if (self.paper.frame === false)\n    return;\n\n  self.draw(function() {\n    self.paper.frame = window.requestAnimationFrame(fn.bind(this));\n  });\n};\n\nOrigami.scale = function(width, height) {\n  queue('scale', {\n    width: width,\n    height: height\n  });\n  return this;\n};\n\nOrigami.flip = function(type) {\n  queue('flip', {\n    type: type\n  });\n  return this;\n};\n\nOrigami.flipEnd = function() {\n  queue('flipEnd');\n  return this;\n};\n\nOrigami.clear = function() {\n  queue('clear');\n  return this;\n};\n\nOrigami.on = function(ev, fn) {\n  this.paper.element.addEventListener(ev, fn);\n  return this;\n};\n\nvar factory = extend(Origami.init.bind(this), Origami);\n\n// For consistency with CommonJS environments' exports\nif (  module && module.exports ){\n    module.exports = factory;\n}\n\n// For CommonJS with exports, but without module.exports, like Rhino\nelse if (  exports ) {\n    exports.origami = factory;\n}\n\n// For browser, export only select globals\nelse if ( typeof window === \"object\" ) {\n    window.origami = extend(Origami.init.bind(Origami), Origami);\n}\n\n// Get a reference to the global object\n}( (function() {\n    return this;\n})() ));\n});\nvar origami_2 = origami_1.origami;\n\nvar drawRoundLayers = (functionContext) => {\n    let { data, options, ctx, h, w, Helper, canvasId } = functionContext;\n    let helper = new Helper(ctx);\n\n    let origamiContext = {};\n    let origami = origami_1.bind(origamiContext);\n\n    origami(ctx)\n        .rect(10, 10, 40, 40)\n        .draw();\n\n\n};\n\n//options:type,colors,stroke\nfunction visualize(data, canvasId, options = {}, frame) {\n    //make a clone of options\n    options = { ...options };\n    //options\n    if (!options.stroke) options.stroke = 1;\n    if (!options.colors) options.colors = [\"#d92027\", \"#ff9234\", \"#ffcd3c\", \"#35d0ba\"];\n\n\n    let canvas = document.getElementById(canvasId);\n\n    if (!canvas) return;\n\n    let ctx = canvas.getContext(\"2d\");\n    let h = canvas.height;\n    let w = canvas.width;\n\n\n\n    ctx.strokeStyle = options.colors[0];\n    ctx.lineWidth = options.stroke;\n\n    let typeMap = {\n        \"bars\": drawBars,\n        \"bars blocks\": drawBarsBlocks,\n        \"big bars\": drawBigBars,\n        \"cubes\": drawCubes,\n        \"dualbars\": drawDualbars,\n        \"dualbars blocks\": drawDualbarsBlocks,\n        \"fireworks\": drawFireworks,\n        \"flower\": drawFlower,\n        \"flower blocks\": drawFlowerBlocks,\n        \"orbs\": drawOrbs,\n        \"ring\": drawRing,\n        \"rings\": drawRings,\n        \"round layers\": drawRoundLayers,\n        \"round wave\": drawRoundWave,\n        \"shine\": drawShine,\n        \"shine rings\": drawShineRings,\n        \"shockwave\": drawShockwave,\n        \"star\": drawStar,\n        \"static\": drawStatic,\n        \"stitches\": drawStitches,\n        \"wave\": drawWave,\n        \"web\": drawWeb\n    };\n\n    let frameRateMap = {\n        \"bars\": 1,\n        \"bars blocks\": 1,\n        \"big bars\": 1,\n        \"cubes\": 1,\n        \"dualbars\": 1,\n        \"dualbars blocks\": 1,\n        \"fireworks\": 1,\n        \"flower\": 1,\n        \"flower blocks\": 1,\n        \"ring\": 1,\n        \"rings\": 1,\n        \"round layers\": 1,\n        \"round wave\": 1,\n        \"orbs\": 1,\n        \"shine\": 1,\n        \"shine rings\": 1,\n        \"shockwave\": 1,\n        \"star\": 1,\n        \"static\": 1,\n        \"stitches\": 1,\n        \"wave\": 1,\n        \"web\": 1\n    };\n\n    const functionContext = {\n        data, options, ctx, h, w, Helper: this.Helper, canvasId\n    };\n\n    if (typeof options.type == \"string\") options.type = [options.type];\n\n    options.type.forEach(type => {\n        //abide by the frame rate\n        if (frame % frameRateMap[type] === 0) {\n            //clear canvas\n            ctx.clearRect(0, 0, w, h);\n            ctx.beginPath();\n\n            typeMap[type](functionContext);\n        }\n    });\n\n}\n\nfunction Helper(ctx) {\n    this.ctx = ctx;\n    this.mainColor = \"black\";\n}\n\nHelper.prototype = {\n    __toRadians__(degree) {\n        return (degree * Math.PI) / 180;\n    },\n    __rotatePoint__([pointX, pointY], [originX, originY], degree) {\n        //clockwise\n        let angle = this.__toRadians__(degree);\n        let rotatedX = Math.cos(angle) * (pointX - originX) - Math.sin(angle) * (pointY - originY) + originX;\n        let rotatedY = Math.sin(angle) * (pointX - originX) + Math.cos(angle) * (pointY - originY) + originY;\n\n        return [rotatedX, rotatedY]\n    },\n    mutateData(data, type, extra = null) {\n        if (type === \"mirror\") {\n            let rtn = [];\n\n            for (let i = 0; i < data.length; i += 2) {\n                rtn.push(data[i]);\n            }\n\n            rtn = [...rtn, ...rtn.reverse()];\n            return rtn\n        }\n\n        if (type === \"shrink\") {\n            //resize array by % of current array \n            if (extra < 1) {\n                extra = data.length * extra;\n            }\n\n            let rtn = [];\n            let splitAt = Math.floor(data.length / extra);\n\n            for (let i = 1; i <= extra; i++) {\n                let arraySection = data.slice(i * splitAt, (i * splitAt) + splitAt);\n                let middle = arraySection[Math.floor(arraySection.length / 2)];\n                rtn.push(middle);\n            }\n\n            return rtn\n        }\n\n        if (type === \"split\") {\n            let size = Math.floor(data.length / extra);\n            let rtn = [];\n            let temp = [];\n\n            let track = 0;\n            for (let i = 0; i <= size * extra; i++) {\n                if (track === size) {\n                    rtn.push(temp);\n                    temp = [];\n                    track = 0;\n                }\n\n                temp.push(data[i]);\n                track++;\n            }\n\n            return rtn\n        }\n\n        if (type === \"scale\") {\n            let scalePercent = extra / 255;\n            if (extra <= 3 && extra >= 0) scalePercent = extra;\n            let rtn = data.map(value => value * scalePercent);\n            return rtn\n        }\n\n        if (type === \"organize\") {\n            let rtn = {};\n            rtn.base = data.slice(60, 120);\n            rtn.vocals = data.slice(120, 255);\n            rtn.mids = data.slice(255, 2000);\n            return rtn\n        }\n\n        if (type === \"reverb\") {\n            let rtn = [];\n            data.forEach((val, i) => {\n                rtn.push(val - (data[i + 1] || 0));\n            });\n            return rtn\n        }\n\n        if (type === \"amp\") {\n            let rtn = [];\n            data.forEach(val => {\n                rtn.push(val * (extra + 1));\n            });\n            return rtn\n        }\n\n        if (type === \"min\") {\n            let rtn = [];\n            data.forEach(value => {\n                if (value < extra) value = extra;\n                rtn.push(value);\n            });\n            return rtn\n        }\n    },\n    getPoints(shape, size, [originX, originY], pointCount, endPoints, options = {}) {\n        let { offset = 0, rotate = 0, customOrigin = [] } = options;\n        let rtn = {\n            start: [],\n            end: []\n        };\n\n        if (shape === \"circle\") {\n\n            let degreePerPoint = 360 / pointCount;\n            let radianPerPoint = this.__toRadians__(degreePerPoint);\n            let radius = size / 2;\n\n            for (let i = 1; i <= pointCount; i++) {\n                let currentRadian = radianPerPoint * i;\n                let currentEndPoint = endPoints[i - 1];\n                let pointOffset = endPoints[i - 1] * (offset / 100);\n\n                let x = originX + (radius - pointOffset) * Math.cos(currentRadian);\n                let y = originY + (radius - pointOffset) * Math.sin(currentRadian);\n                let point1 = this.__rotatePoint__([x, y], [originX, originY], rotate);\n\n                rtn.start.push(point1);\n\n                x = originX + ((radius - pointOffset) + currentEndPoint) * Math.cos(currentRadian);\n                y = originY + ((radius - pointOffset) + currentEndPoint) * Math.sin(currentRadian);\n                let point2 = this.__rotatePoint__([x, y], [originX, originY], rotate);\n\n                rtn.end.push(point2);\n\n            }\n\n            return rtn\n        }\n\n        if (shape === \"line\") {\n            let increment = size / pointCount;\n\n            originX = customOrigin[0] || originX;\n            originY = customOrigin[1] || originY;\n\n            for (let i = 0; i <= pointCount; i++) {\n                let degree = rotate;\n                let pointOffset = endPoints[i] * (offset / 100);\n\n                let startingPoint = this.__rotatePoint__([originX + (i * increment), originY - pointOffset],\n                    [originX, originY], degree);\n                rtn.start.push(startingPoint);\n\n                let endingPoint = this.__rotatePoint__([originX + (i * increment), (originY + endPoints[i]) - pointOffset],\n                    [originX, originY], degree);\n                rtn.end.push(endingPoint);\n            }\n\n            return rtn\n\n        }\n\n    },\n    drawCircle([x, y], diameter, options = {}) {\n        let { color, lineColor = this.ctx.strokeStyle } = options;\n\n        this.ctx.beginPath();\n        this.ctx.arc(x, y, diameter / 2, 0, 2 * Math.PI);\n        this.ctx.strokeStyle = lineColor;\n        this.ctx.stroke();\n        this.ctx.fillStyle = color;\n        if (color) this.ctx.fill();\n    },\n    drawOval([x, y], height, width, options = {}) {\n        let { rotation = 0, color, lineColor = this.ctx.strokeStyle } = options;\n        if (rotation) rotation = this.__toRadians__(rotation);\n\n        this.ctx.beginPath();\n        this.ctx.ellipse(x, y, width, height, rotation, 0, 2 * Math.PI);\n        this.ctx.strokeStyle = lineColor;\n        this.ctx.stroke();\n        this.ctx.fillStyle = color;\n        if (color) this.ctx.fill();\n    },\n    drawSquare([x, y], diameter, options = {}) {\n        this.drawRectangle([x, y], diameter, diameter, options);\n    },\n    drawRectangle([x, y], height, width, options = {}) {\n        let { color, lineColor = this.ctx.strokeStyle, radius = 0, rotate = 0 } = options;\n\n        // if (width < 2 * radius) radius = width / 2;\n        // if (height < 2 * radius) radius = height / 2;\n\n        this.ctx.beginPath();\n        this.ctx.moveTo(x + radius, y);\n        let p1 = this.__rotatePoint__([x + width, y], [x, y], rotate);\n        let p2 = this.__rotatePoint__([x + width, y + height], [x, y], rotate);\n        this.ctx.arcTo(p1[0], p1[1], p2[0], p2[1], radius);\n\n        let p3 = this.__rotatePoint__([x + width, y + height], [x, y], rotate);\n        let p4 = this.__rotatePoint__([x, y + height], [x, y], rotate);\n        this.ctx.arcTo(p3[0], p3[1], p4[0], p4[1], radius);\n\n        let p5 = this.__rotatePoint__([x, y + height], [x, y], rotate);\n        let p6 = this.__rotatePoint__([x, y], [x, y], rotate);\n        this.ctx.arcTo(p5[0], p5[1], p6[0], p6[1], radius);\n\n        let p7 = this.__rotatePoint__([x, y], [x, y], rotate);\n        let p8 = this.__rotatePoint__([x + width, y], [x, y], rotate);\n        this.ctx.arcTo(p7[0], p7[1], p8[0], p8[1], radius);\n        this.ctx.closePath();\n\n        this.ctx.strokeStyle = lineColor;\n        this.ctx.stroke();\n        this.ctx.fillStyle = color;\n        if (color) this.ctx.fill();\n\n    },\n    drawLine([fromX, fromY], [toX, toY], options = {}) {\n        let { lineColor = this.ctx.strokeStyle } = options;\n\n        this.ctx.beginPath();\n        this.ctx.moveTo(fromX, fromY);\n        this.ctx.lineTo(toX, toY);\n        this.ctx.strokeStyle = lineColor;\n        this.ctx.stroke();\n    },\n    drawPolygon(points, options = {}) {\n        let { color, lineColor = this.ctx.strokeStyle, radius = 0, close = false } = options;\n\n        function getRoundedPoint(x1, y1, x2, y2, radius, first) {\n            let total = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n            let idx = first ? radius / total : (total - radius) / total;\n\n            return [x1 + (idx * (x2 - x1)), y1 + (idx * (y2 - y1))];\n        }\n\n        function getRoundedPoints(pts, radius) {\n            let len = pts.length;\n            let res = new Array(len);\n\n            for (let i2 = 0; i2 < len; i2++) {\n                let i1 = i2 - 1;\n                let i3 = i2 + 1;\n\n                if (i1 < 0) i1 = len - 1;\n                if (i3 == len) i3 = 0;\n\n                let p1 = pts[i1];\n                let p2 = pts[i2];\n                let p3 = pts[i3];\n\n                let prevPt = getRoundedPoint(p1[0], p1[1], p2[0], p2[1], radius, false);\n                let nextPt = getRoundedPoint(p2[0], p2[1], p3[0], p3[1], radius, true);\n                res[i2] = [prevPt[0], prevPt[1], p2[0], p2[1], nextPt[0], nextPt[1]];\n            }\n            return res;\n        }\n        if (radius > 0) {\n            points = getRoundedPoints(points, radius);\n        }\n\n        let i, pt, len = points.length;\n        for (i = 0; i < len; i++) {\n            pt = points[i];\n            if (i == 0) {\n                this.ctx.beginPath();\n                this.ctx.moveTo(pt[0], pt[1]);\n            } else {\n                this.ctx.lineTo(pt[0], pt[1]);\n            }\n            if (radius > 0) {\n                this.ctx.quadraticCurveTo(pt[2], pt[3], pt[4], pt[5]);\n            }\n        }\n\n        if (close) this.ctx.closePath();\n        this.ctx.strokeStyle = lineColor;\n        this.ctx.stroke();\n\n        this.ctx.fillStyle = color;\n        if (color) this.ctx.fill();\n    }\n\n};\n\nfunction Wave() {\n    this.current_stream = {};\n    this.sources = {};\n    this.onFileLoad = null;\n    this.activeElements = {};\n    this.activated = false;\n\n    window.AudioContext = window.AudioContext || window.webkitAudioContext;\n}\n\nWave.prototype = {\n    fromElement,\n    fromFile,\n    ...fromStream$1,\n    visualize,\n    Helper\n};\n\nmodule.exports = Wave;\n"]},"metadata":{},"sourceType":"script"}