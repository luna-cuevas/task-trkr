{"ast":null,"code":"import _slicedToArray from\"/Users/luna.c/Documents/code/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import{TextField,Button}from'@material-ui/core';import{useState,useEffect}from'react';import{db}from'./firebase_config';import firebase from\"firebase/compat/app\";import{TodoList}from'./components/TodoList/TodoList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),todoInput=_useState4[0],setTodoInput=_useState4[1];useEffect(function(){getTodos();},[]);function getTodos(){db.collection(\"todos\").onSnapshot(function(querySnapshot){setTodos(querySnapshot.docs.map(function(doc){return{id:doc.id,todo:doc.data().todo,inprogress:doc.data().inprogress};}));});}function addTodo(e){e.preventDefault();db.collection(\"todos\").add({inprogress:true,timestamp:firebase.firestore.FieldValue.serverTimestamp(),todo:todoInput});setTodoInput(\"\");}return/*#__PURE__*/_jsxs(\"div\",{className:\"todo-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Test\"}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(TextField,{onChange:function onChange(e){setTodoInput(e.target.value);},value:todoInput,className:\"text-field\",id:\"outlined-basic\",label:\"Write a Todo\",variant:\"outlined\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",onClick:addTodo,color:\"secondary\",variant:\"contained\",children:\"Contained\"})]}),todos.map(function(todo){return/*#__PURE__*/_jsx(TodoList,{todo:todo.todo,inprogress:todo.inprogress,id:todo.id});})]});}export default App;","map":{"version":3,"sources":["/Users/luna.c/Documents/code/todo-app/src/App.js"],"names":["TextField","Button","useState","useEffect","db","firebase","TodoList","App","todos","setTodos","todoInput","setTodoInput","getTodos","collection","onSnapshot","querySnapshot","docs","map","doc","id","todo","data","inprogress","addTodo","e","preventDefault","add","timestamp","firestore","FieldValue","serverTimestamp","target","value"],"mappings":"4JAAA,MAAO,WAAP,CACA,OAASA,SAAT,CAAoBC,MAApB,KAAkC,mBAAlC,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,EAAT,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CACA,OAASC,QAAT,KAAyB,gCAAzB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CAEb,cAA0BL,QAAQ,CAAC,EAAD,CAAlC,wCAAOM,KAAP,eAAcC,QAAd,eACA,eAAkCP,QAAQ,CAAC,EAAD,CAA1C,yCAAOQ,SAAP,eAAkBC,YAAlB,eAEAR,SAAS,CAAC,UAAM,CACdS,QAAQ,GACT,CAFQ,CAEN,EAFM,CAAT,CAIA,QAASA,CAAAA,QAAT,EAAoB,CAClBR,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBC,UAAvB,CAAkC,SAAUC,aAAV,CAAyB,CACzDN,QAAQ,CACNM,aAAa,CAACC,IAAd,CAAmBC,GAAnB,CAAuB,SAACC,GAAD,QAAU,CAC/BC,EAAE,CAAED,GAAG,CAACC,EADuB,CAE/BC,IAAI,CAAEF,GAAG,CAACG,IAAJ,GAAWD,IAFc,CAG/BE,UAAU,CAAEJ,GAAG,CAACG,IAAJ,GAAWC,UAHQ,CAAV,EAAvB,CADM,CAAR,CAOD,CARD,EASD,CAED,QAASC,CAAAA,OAAT,CAAiBC,CAAjB,CAAoB,CAClBA,CAAC,CAACC,cAAF,GAEArB,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBa,GAAvB,CAA2B,CACzBJ,UAAU,CAAE,IADa,CAEzBK,SAAS,CAAEtB,QAAQ,CAACuB,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EAFc,CAGzBV,IAAI,CAAEV,SAHmB,CAA3B,EAMAC,YAAY,CAAC,EAAD,CAAZ,CACD,CAED,mBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,4BADF,cAEE,qCACE,KAAC,SAAD,EAAW,QAAQ,CAAE,kBAACa,CAAD,CAAO,CAC1Bb,YAAY,CAACa,CAAC,CAACO,MAAF,CAASC,KAAV,CAAZ,CACD,CAFD,CAGA,KAAK,CAAEtB,SAHP,CAIA,SAAS,CAAC,YAJV,CAIuB,EAAE,CAAC,gBAJ1B,CAI2C,KAAK,CAAC,cAJjD,CAIgE,OAAO,CAAC,UAJxE,EADF,cAME,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEa,OAA/B,CAAwC,KAAK,CAAC,WAA9C,CAA0D,OAAO,CAAC,WAAlE,uBANF,GAFF,CAUGf,KAAK,CAACS,GAAN,CAAU,SAACG,IAAD,qBACL,KAAC,QAAD,EACE,IAAI,CAAEA,IAAI,CAACA,IADb,CAEE,UAAU,CAAEA,IAAI,CAACE,UAFnB,CAGE,EAAE,CAAEF,IAAI,CAACD,EAHX,EADK,EAAV,CAVH,GADF,CAoBD,CAED,cAAeZ,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport { TextField, Button } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport { db } from './firebase_config';\nimport firebase from \"firebase/compat/app\"\nimport { TodoList } from './components/TodoList/TodoList';\n\nfunction App() {\n\n  const [todos, setTodos] = useState([]);\n  const [todoInput, setTodoInput] = useState(\"\");\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  function getTodos() {\n    db.collection(\"todos\").onSnapshot(function (querySnapshot) {\n      setTodos(\n        querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          todo: doc.data().todo,\n          inprogress: doc.data().inprogress,\n        }))\n      );\n    });\n  }\n\n  function addTodo(e) {\n    e.preventDefault();\n\n    db.collection(\"todos\").add({\n      inprogress: true,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      todo: todoInput,\n    });\n\n    setTodoInput(\"\");\n  }\n\n  return (\n    <div className=\"todo-container\">\n      <h1>Test</h1>\n      <form>\n        <TextField onChange={(e) => {\n          setTodoInput(e.target.value);\n        }}\n        value={todoInput}\n        className='text-field' id='outlined-basic' label='Write a Todo' variant='outlined' />\n        <Button type='submit' onClick={addTodo} color='secondary' variant=\"contained\">Contained</Button>\n      </form>\n      {todos.map((todo) => (\n            <TodoList\n              todo={todo.todo}\n              inprogress={todo.inprogress}\n              id={todo.id}\n            />\n          ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}