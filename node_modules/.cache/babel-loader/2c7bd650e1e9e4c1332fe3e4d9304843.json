{"ast":null,"code":"var _jsxFileName = \"/Users/luna.c/Documents/CodeWork/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { TextField, Button } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport { db } from './firebase_config';\nimport firebase from 'firebase/compat/app';\nimport * as firebaseui from 'firebaseui';\nimport 'firebaseui/dist/firebaseui.css';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var ui = new firebaseui.auth.AuthUI(firebase.auth());\n  ui.start('#firebaseui-auth-container', {\n    signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID, firebase.auth.GoogleAuthProvider.PROVIDER_ID] // Other config options...\n\n  });\n  ui.start('#firebaseui-auth-container', uiConfig);\n  const [todos, setTodos] = useState([]);\n  const [todoInput, setTodoInput] = useState(\"\");\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  function getTodos() {\n    db.collection(\"todos\").onSnapshot(function (querySnapshot) {\n      setTodos(querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        todo: doc.data().todo,\n        inprogress: doc.data().inprogress\n      })));\n    });\n  }\n\n  function addTodo(e) {\n    e.preventDefault();\n    db.collection(\"todos\").add({\n      inprogress: true,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      todo: todoInput\n    });\n    setTodoInput(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to My Awesome App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"firebaseui-auth-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loader\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        onChange: e => {\n          setTodoInput(e.target.value);\n        },\n        value: todoInput,\n        className: \"text-field\",\n        id: \"outlined-basic\",\n        label: \"Write a Todo\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: addTodo,\n        color: \"secondary\",\n        variant: \"contained\",\n        children: \"Contained\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(TodoList, {\n      todo: todo.todo,\n      inprogress: todo.inprogress,\n      id: todo.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GMsXrW5GwB13CgwZmEjogq9kwYs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/luna.c/Documents/CodeWork/todo-app/src/App.js"],"names":["TextField","Button","useState","useEffect","db","firebase","firebaseui","TodoList","App","ui","auth","AuthUI","start","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","uiConfig","todos","setTodos","todoInput","setTodoInput","getTodos","collection","onSnapshot","querySnapshot","docs","map","doc","id","todo","data","inprogress","addTodo","e","preventDefault","add","timestamp","firestore","FieldValue","serverTimestamp","target","value"],"mappings":"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","sourcesContent":["import './App.css';\nimport { TextField, Button } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport { db } from './firebase_config';\nimport firebase from 'firebase/compat/app';\nimport * as firebaseui from 'firebaseui'\nimport 'firebaseui/dist/firebaseui.css'\nimport { TodoList } from './components/TodoList/TodoList';\n\n\nfunction App() {\n\n  var ui = new firebaseui.auth.AuthUI(firebase.auth());\n\n  ui.start('#firebaseui-auth-container', {\n    signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID\n    ],\n    // Other config options...\n  });\n\n  ui.start('#firebaseui-auth-container', uiConfig);\n  const [todos, setTodos] = useState([]);\n  const [todoInput, setTodoInput] = useState(\"\");\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  function getTodos() {\n    db.collection(\"todos\").onSnapshot(function (querySnapshot) {\n      setTodos(\n        querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          todo: doc.data().todo,\n          inprogress: doc.data().inprogress,\n        }))\n      );\n    });\n  }\n\n  function addTodo(e) {\n    e.preventDefault();\n\n    db.collection(\"todos\").add({\n      inprogress: true,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      todo: todoInput,\n    });\n\n    setTodoInput(\"\");\n  }\n\n  return (\n    <div className=\"todo-container\">\n      <h1>Test</h1>\n      <div>\n        <h1>Welcome to My Awesome App</h1>\n        <div id=\"firebaseui-auth-container\"></div>\n        <div id=\"loader\">Loading...</div>\n      </div>\n      <form>\n        <TextField onChange={(e) => {\n          setTodoInput(e.target.value);\n        }}\n        value={todoInput}\n        className='text-field' id='outlined-basic' label='Write a Todo' variant='outlined' />\n        <Button type='submit' onClick={addTodo} color='secondary' variant=\"contained\">Contained</Button>\n      </form>\n      {todos.map((todo) => (\n            <TodoList\n              todo={todo.todo}\n              inprogress={todo.inprogress}\n              id={todo.id}\n            />\n          ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}