{"ast":null,"code":"var _jsxFileName = \"/Users/luna.c/Documents/CodeWork/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todoInput, setTodoInput] = useState(\"\");\n  const [items, setItems] = useState(getLocalData()); //storing items in an array\n  //get local storage data\n\n  const getLocalData = () => {\n    const list = localStorage.getItem(\"todoList\");\n\n    if (list) {\n      return JSON.parse(list); //changing item into an array\n    } else {\n      return [];\n    }\n  }; //function to add items\n\n\n  const addTodo = e => {\n    e.preventDefault(); //preventing the page to reload\n\n    if (!todoInput) {\n      alert(\"Please enter something\");\n    } else {\n      const newTodoInput = {\n        id: new Date().getTime().toString(),\n        name: todoInput\n      };\n      setItems([...items, newTodoInput]);\n      setTodoInput(\"\");\n    }\n  }; //delete items\n\n\n  const deleteItem = index => {\n    const updatedItems = items.filter(curElem => {\n      return curElem.id !== index;\n    });\n    setItems(updatedItems);\n  }; //delete all items\n\n\n  const deleteAll = () => {\n    setItems([]);\n  }; //delete all button\n\n\n  const disableBtnProps = {};\n\n  if (items.length === 0) {\n    disableBtnProps.disabled = true;\n  } else {\n    disableBtnProps.disabled = false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"heading\",\n          children: \"Task Tracker \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            label: \"Add a task\",\n            className: \"text-area\",\n            value: todoInput,\n            onChange: e => setTodoInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            onClick: addTodo,\n            variant: \"outlined\",\n            style: {\n              display: \"none\"\n            },\n            children: \"Add item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"show-list\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"items\",\n            children: items.map(curElem => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"each-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: curElem.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"todo-buttons\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"delete\",\n                    className: \"btn\",\n                    onClick: () => deleteItem(curElem.id),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      style: {\n                        color: \"red\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this)]\n              }, curElem.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"medium\",\n          className: \"btn delete-all-btn\",\n          onClick: deleteAll,\n          ...disableBtnProps,\n          children: \"DELETE ALL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      id: \"spotify\",\n      src: \"https://open.spotify.com/embed/playlist/1OFYueY9xdzvJESetZaiKw?utm_source=generator&theme=0\",\n      frameBorder: \"0\",\n      allowfullscreen: \"\",\n      allow: \"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"j9Ft1zcUMtYuxXUOXRRQ5uvxEuA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/luna.c/Documents/CodeWork/todo-app/src/App.js"],"names":["React","useState","useEffect","TextField","Button","IconButton","DeleteIcon","App","todoInput","setTodoInput","items","setItems","getLocalData","list","localStorage","getItem","JSON","parse","addTodo","e","preventDefault","alert","newTodoInput","id","Date","getTime","toString","name","deleteItem","index","updatedItems","filter","curElem","deleteAll","disableBtnProps","length","disabled","target","value","display","map","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nfunction App() {\n\n  const [todoInput, setTodoInput] = useState(\"\"); \n  const [items, setItems] = useState(getLocalData()); //storing items in an array\n\n  //get local storage data\n  const getLocalData = () => {\n    const list = localStorage.getItem(\"todoList\");\n    if (list) {\n      return JSON.parse(list); //changing item into an array\n    } else {\n      return [];\n    }\n  };\n\n  //function to add items\n  const addTodo = (e) => {\n    e.preventDefault(); //preventing the page to reload\n\n    if (!todoInput) {\n      alert(\"Please enter something\");\n    } else {\n      const newTodoInput = {\n        id: new Date().getTime().toString(),\n        name: todoInput,\n      };\n      setItems([...items, newTodoInput]);\n      setTodoInput(\"\");\n    }\n  };\n\n  //delete items\n  const deleteItem = (index) => {\n    const updatedItems = items.filter((curElem) => {\n      return curElem.id !== index;\n    });\n    setItems(updatedItems);\n  };\n\n  //delete all items\n  const deleteAll = () => {\n    setItems([]);\n  };\n\n  //delete all button\n  const disableBtnProps = {};\n  if (items.length === 0) {\n    disableBtnProps.disabled = true;\n  } else {\n    disableBtnProps.disabled = false;\n  }\n\n\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"wrapper\">\n          <span className=\"heading\">Task Tracker </span>\n          <form>\n            <TextField id=\"standard-basic\" label=\"Add a task\" className=\"text-area\" value={todoInput} onChange={(e) => setTodoInput(e.target.value)} />\n            <Button type=\"submit\" onClick={addTodo} variant=\"outlined\" style={{ display: \"none\" }}>\n              Add item\n            </Button>\n          </form>\n          {/* show todo list */}\n          <div className=\"show-list\">\n            <div className=\"items\">\n              {items.map((curElem) => {\n                return (\n                  <div className=\"each-item\" key={curElem.id}>\n                    <span>{curElem.name}</span>\n                    <div className=\"todo-buttons\">\n                      <IconButton aria-label=\"delete\" className=\"btn\" onClick={() => deleteItem(curElem.id)}>\n                        <DeleteIcon style={{ color: \"red\" }} />\n                      </IconButton>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <Button variant=\"outlined\" size=\"medium\" className=\"btn delete-all-btn\" onClick={deleteAll} {...disableBtnProps}>\n            DELETE ALL\n          </Button>\n        </div>\n      </div>\n      <iframe id='spotify' src=\"https://open.spotify.com/embed/playlist/1OFYueY9xdzvJESetZaiKw?utm_source=generator&theme=0\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}